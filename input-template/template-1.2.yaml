apiVersion: v1
kind: Template
metadata:
  name: trustification
objects:
  - NAME: redhat-trusted-profile-analyzer
    LAST DEPLOYED: Fri Oct 11 13:48:54 2024
    NAMESPACE: trustification
    STATUS: pending-install
    REVISION: 1
    USER-SUPPLIED VALUES: null
    appDomain: $APP_DOMAIN_URL
    authenticator:
      type: keycloak
    eventBus:
      bootstrapServers: my-cluster-kafka-bootstrap:9092
      config:
        mechanism: SCRAM-SHA-512
        password:
          valueFrom:
            secretKeyRef:
              key: password
              name: user1
        securityProtocol: SASL_PLAINTEXT
        username: user1
      type: kafka
    guac:
      database:
        host: keycloak-postgresql
        name: guac
        password: guac1234
        sslMode: disable
        username: guac
      image:
        fullName: registry.redhat.io/rhtpa/rhtpa-guac-rhel9@sha256:d5b83ecd6f59807eb40faabfc60b4d452971ba18c1a0e5fbd7f49d82a9361529
        pullPolicy: IfNotPresent
      initDatabase:
        host:
          valueFrom:
            secretKeyRef:
              key: POSTGRES_HOST
              name: keycloak-db-secret
        name:
          valueFrom:
            secretKeyRef:
              key: POSTGRES_DATABASE
              name: keycloak-db-secret
        password: postgres
        sslMode: disable
        username: postgres
    ingress:
      className: openshift-default
    oidc:
      clients:
        frontend:
          clientId: frontend
        testingManager:
          clientSecret:
            value: ca48053c-3b82-4650-a98d-4cace7f2d567
        testingUser:
          clientSecret:
            value: 0e6bf990-43b4-4efb-95d7-b24f2b94a525
        walker:
          clientId: walker
          clientSecret:
            value: 5460cc91-4e20-4edd-881c-b15b169f8a79
    storage:
      accessKey:
        valueFrom:
          secretKeyRef:
            key: root-user
            name: infrastructure-minio
      endpoint: http://infrastructure-minio:9000
      secretKey:
        valueFrom:
          secretKeyRef:
            key: root-password
            name: infrastructure-minio
    tracing:
      enabled: false
    COMPUTED VALUES: null
    bombastic:
      bucket: bombastic-default
      topics:
        failed: bombastic-failed-default
        indexed: bombastic-indexed-default
        stored: bombastic-stored-default
    image:
      fullName: registry.redhat.io/rhtpa/rhtpa-trustification-service-rhel9@sha256:e8c6b0b1d42cf780a827a91ecf4ac04f8b95c973062073c2a31ae1d38c59bb0c
      pullPolicy: IfNotPresent
    index:
      mode: file
      syncInterval: 1m
      writerMemoryBytes: 128MiB
    infrastructure:
      port: 9010
    metrics:
      enabled: false
    modules:
      bombasticApi:
        enabled: true
        image: {}
        infrastructure: {}
        ingress: {}
        metrics: {}
        rust: {}
        tracing: {}
      bombasticCollector:
        enabled: true
        image: {}
      bombasticIndexer:
        enabled: true
        image: {}
        infrastructure: {}
        metrics: {}
        rust: {}
        tracing: {}
      bombasticWalker:
        enabled: true
        image: {}
        infrastructure: {}
        rust: {}
        sources: {}
      collectorOsv:
        enabled: true
        image: {}
        infrastructure: {}
        ingress: {}
        metrics: {}
        rust: {}
        tracing: {}
      collectoristApi:
        cadenceOsv: 1d
        enabled: true
        image: {}
        infrastructure: {}
        ingress: {}
        metrics: {}
        rust: {}
        storageSize: 1Gi
        tracing: {}
      documentation:
        enabled: false
        image: {}
        ingress: {}
        resources:
          limits:
            memory: 64Mi
          requests:
            memory: 64Mi
      guacCollectsub:
        enabled: true
        image: {}
      guacGraphql:
        enabled: true
        image: {}
        infrastructure: {}
        metrics: {}
      guacInitDb:
        enabled: true
        image: {}
      initDataset:
        enabled: true
        image: {}
        rust: {}
      integrationTests:
        enabled: false
        image: {}
        rust: {}
      spogApi:
        crdaUrl: https://rhda.rhcloud.com/api/v4/analysis
        enabled: true
        image: {}
        infrastructure: {}
        ingress:
          additionalAnnotations:
            haproxy.router.openshift.io/timeout: 180s
        metrics: {}
        rust: {}
        storageSize: 10Mi
        tracing: {}
        uiConfiguration:
          configMapRef:
            key: spog-ui.yaml
            name: spog-ui-config
      spogUi:
        brandingConfigMap: spog-ui-branding
        enabled: true
        image: {}
        ingress:
          additionalAnnotations:
            haproxy.router.openshift.io/timeout: 180s
        resources:
          limits:
            memory: 64Mi
          requests:
            memory: 64Mi
      v11yApi:
        enabled: true
        image: {}
        infrastructure: {}
        ingress: {}
        metrics: {}
        rust: {}
        tracing: {}
      v11yIndexer:
        enabled: true
        image: {}
        infrastructure: {}
        metrics: {}
        rust: {}
        tracing: {}
      v11yWalker:
        enabled: true
        image: {}
        infrastructure: {}
        metrics: {}
        rust: {}
        storageSize: 10Gi
        tracing: {}
      vexinationApi:
        enabled: true
        image: {}
        infrastructure: {}
        ingress: {}
        metrics: {}
        rust: {}
        tracing: {}
      vexinationCollector:
        enabled: true
        image: {}
      vexinationIndexer:
        enabled: true
        image: {}
        infrastructure: {}
        metrics: {}
        rust: {}
        tracing: {}
      vexinationWalker:
        enabled: true
        image: {}
        infrastructure: {}
        rust: {}
        sources: {}
    openshift:
      useServiceCa: true
    partOf: trusted-profile-analyzer
    replicas: 1
    rust: {}
    serviceMonitor:
      enabled: false
    tls: {}
    v11y:
      bucket: v11y-default
      topics:
        failed: v11y-failed-default
        indexed: v11y-indexed-default
        stored: v11y-stored-default
    vexination:
      bucket: vexination-default
      topics:
        failed: vexination-failed-default
        indexed: vexination-indexed-default
        stored: vexination-stored-default
    workarounds: {}
    HOOKS: null
  - kind: ConfigMap
    apiVersion: v1
    metadata:
      name: init-guac-db
      labels:
        app.kubernetes.io/name: init-guac-db
        app.kubernetes.io/component: guac
        app.kubernetes.io/instance: redhat-trusted-profile-analyzer
        app.kubernetes.io/version: 1.2.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: trusted-profile-analyzer
      annotations:
        argocd.argoproj.io/hook: Sync
        argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
        argocd.argoproj.io/sync-wave: '0'
        helm.sh/hook-weight: '5'
        helm.sh/hook: pre-install,pre-upgrade
        helm.sh/hook-delete-policy: before-hook-creation
    data:
      init.sql: "-- ensure we have the database\nSELECT 'CREATE DATABASE ' || :'db_name'\n\
        WHERE NOT EXISTS (SELECT FROM pg_database WHERE datname = :'db_name')\\gexec\n\
        \n-- create the user (if it doesn't exist)\nCREATE OR REPLACE FUNCTION add_user_if_not_exists(username\
        \ NAME) RETURNS integer\n    AS $$\nBEGIN\n    IF NOT EXISTS (SELECT FROM\
        \ pg_roles\n        WHERE rolname = username) THEN\n\n        EXECUTE FORMAT('CREATE\
        \ ROLE \"%I\" LOGIN', username);\n\n    END IF;\n    RETURN NULL;\nEND;\n\
        $$ language plpgsql;\n\nSELECT add_user_if_not_exists(:'db_user');\n\n-- now\
        \ set the password\nALTER USER :db_user WITH PASSWORD :'db_password';\n\n\
        -- grant permission to connect\nGRANT CONNECT ON DATABASE :db_name TO :db_user;\n\
        \n-- grant permissions on database\n\\connect :db_name\n\nGRANT USAGE ON SCHEMA\
        \ public TO :db_user;\n\n-- grant on existing tables\nGRANT SELECT, INSERT,\
        \ UPDATE, DELETE ON ALL TABLES IN SCHEMA public TO :db_user;\n\n-- grant on\
        \ future tables\nALTER DEFAULT PRIVILEGES\n    IN SCHEMA public\n    GRANT\
        \ SELECT, INSERT, UPDATE, DELETE ON TABLES TO :db_user;\n"
  - apiVersion: v1
    kind: Pod
    metadata:
      name: test-test-connection
      labels:
        app.kubernetes.io/name: test
        app.kubernetes.io/component: testing
        app.kubernetes.io/instance: redhat-trusted-profile-analyzer
        app.kubernetes.io/version: 1.2.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: trusted-profile-analyzer
      annotations:
        helm.sh/hook: test
    spec:
      containers:
        - name: test
          image: registry.access.redhat.com/ubi9/ubi-minimal:latest
          command:
            - curl
            - http://spog-ui:443/
      restartPolicy: Never
  - kind: Job
    apiVersion: batch/v1
    metadata:
      name: init-dataset
      labels:
        app.kubernetes.io/name: init-dataset
        app.kubernetes.io/component: init
        app.kubernetes.io/instance: redhat-trusted-profile-analyzer
        app.kubernetes.io/version: 1.2.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: trusted-profile-analyzer
      annotations:
        argocd.argoproj.io/hook: Sync
        argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
        argocd.argoproj.io/sync-wave: '2'
        helm.sh/hook-weight: '20'
        helm.sh/hook: post-install,post-upgrade
        helm.sh/hook-delete-policy: before-hook-creation
    spec:
      backoffLimit: 1000
      completions: 1
      parallelism: 1
      ttlSecondsAfterFinished: 600
      template:
        metadata:
          labels:
            app.kubernetes.io/name: init-dataset
            app.kubernetes.io/component: init
            app.kubernetes.io/instance: redhat-trusted-profile-analyzer
        spec:
          restartPolicy: OnFailure
          containers:
            - name: run
              image: registry.redhat.io/rhtpa/rhtpa-trustification-service-rhel9@sha256:e8c6b0b1d42cf780a827a91ecf4ac04f8b95c973062073c2a31ae1d38c59bb0c
              imagePullPolicy: IfNotPresent
              command:
                - /usr/bin/bash
              args:
                - -ce
                - "ARGS=\"\"\nif [[ -f /run/secrets/kubernetes.io/serviceaccount/service-ca.crt\
                  \ ]]; then\n  ARGS=\"--sender-root-certificates /run/secrets/kubernetes.io/serviceaccount/service-ca.crt\"\
                  \nfi\n/trust bombastic walker $ARGS --sink http://bombastic-api.trustification.svc.cluster.local\
                  \ --source file:/data/sbom\necho SBOM import done\n/trust vexination\
                  \ walker $ARGS --sink http://vexination-api.trustification.svc.cluster.local/api/v1/vex\
                  \ --source file:/data/csaf\necho CSAF import done\n"
              env:
                - name: OIDC_PROVIDER_CLIENT_ID
                  value: walker
                - name: OIDC_PROVIDER_CLIENT_SECRET
                  value: 5460cc91-4e20-4edd-881c-b15b169f8a79
                - name: OIDC_PROVIDER_ISSUER_URL
                  value: http://sso$APP_DOMAIN_URL/realms/chicken
                - name: RUST_LOG
                  value: info
              volumeMounts: null
          volumes: null
  - kind: Job
    apiVersion: batch/v1
    metadata:
      name: init-guac-db
      labels:
        app.kubernetes.io/name: init-guac-db
        app.kubernetes.io/component: guac
        app.kubernetes.io/instance: redhat-trusted-profile-analyzer
        app.kubernetes.io/version: 1.2.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: trusted-profile-analyzer
      annotations:
        argocd.argoproj.io/hook: Sync
        argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
        argocd.argoproj.io/sync-wave: '0'
        helm.sh/hook-weight: '5'
        helm.sh/hook: pre-install,pre-upgrade
        helm.sh/hook-delete-policy: before-hook-creation
    spec:
      backoffLimit: 1000
      completions: 1
      parallelism: 1
      ttlSecondsAfterFinished: 600
      template:
        metadata:
          labels:
            app.kubernetes.io/name: init-guac-db
            app.kubernetes.io/component: guac
            app.kubernetes.io/instance: redhat-trusted-profile-analyzer
        spec:
          restartPolicy: OnFailure
          volumes:
            - name: init-data
              configMap:
                name: init-guac-db
          containers:
            - name: setup
              image: registry.redhat.io/rhtpa/rhtpa-trustification-service-rhel9@sha256:e8c6b0b1d42cf780a827a91ecf4ac04f8b95c973062073c2a31ae1d38c59bb0c
              imagePullPolicy: IfNotPresent
              env:
                - name: PGHOST
                  valueFrom:
                    secretKeyRef:
                      key: POSTGRES_HOST
                      name: keycloak-db-secret
                - name: PGPORT
                  value: '5432'
                - name: PGDATABASE
                  valueFrom:
                    secretKeyRef:
                      key: POSTGRES_DATABASE
                      name: keycloak-db-secret
                - name: PGUSER
                  value: postgres
                - name: PGPASSWORD
                  value: postgres
                - name: PGSSLMODE
                  value: disable
                - name: DB_NAME
                  value: guac
                - name: DB_USERNAME
                  value: guac
                - name: DB_PASSWORD
                  value: guac1234
              volumeMounts:
                - mountPath: /etc/init-data
                  name: init-data
              command:
                - psql
                - -v
                - ON_ERROR_STOP=1
                - -v
                - db_name=$(DB_NAME)
                - -v
                - db_user=$(DB_USERNAME)
                - -v
                - db_password=$(DB_PASSWORD)
                - -f
                - /etc/init-data/init.sql
    MANIFEST: null
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: guac-collectsub
      labels:
        app.kubernetes.io/name: guac-collectsub
        app.kubernetes.io/component: guac
        app.kubernetes.io/instance: redhat-trusted-profile-analyzer
        app.kubernetes.io/version: 1.2.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: trusted-profile-analyzer
    spec:
      podSelector:
        matchLabels:
          app.kubernetes.io/name: guac-collectsub
          app.kubernetes.io/component: guac
          app.kubernetes.io/instance: redhat-trusted-profile-analyzer
      policyTypes:
        - Ingress
      ingress:
        - from:
            - namespaceSelector:
                matchLabels:
                  kubernetes.io/metadata.name: trustification
          ports:
            - protocol: TCP
              port: 2782
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: guac-graphql
      labels:
        app.kubernetes.io/name: guac-graphql
        app.kubernetes.io/component: guac
        app.kubernetes.io/instance: redhat-trusted-profile-analyzer
        app.kubernetes.io/version: 1.2.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: trusted-profile-analyzer
    spec:
      podSelector:
        matchLabels:
          app.kubernetes.io/name: guac-graphql
          app.kubernetes.io/component: guac
          app.kubernetes.io/instance: redhat-trusted-profile-analyzer
      policyTypes:
        - Ingress
      ingress:
        - from:
            - namespaceSelector:
                matchLabels:
                  kubernetes.io/metadata.name: trustification
          ports:
            - protocol: TCP
              port: 8080
        - from:
            - namespaceSelector: {}
          ports:
            - protocol: TCP
              port: 9010
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: spog-ui-config
      labels:
        app.kubernetes.io/name: spog-ui-config
        app.kubernetes.io/component: branding
        app.kubernetes.io/instance: redhat-trusted-profile-analyzer
        app.kubernetes.io/version: 1.2.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: trusted-profile-analyzer
    data:
      spog-ui.yaml: "$schema: \"https://raw.githubusercontent.com/trustification/trustification/main/spog/model/schema/config.json\"\
        \n\nglobal:\n  documentationUrl: https://access.redhat.com/documentation/en-us/red_hat_trusted_profile_analyzer/1\n\
        \  supportUrl: https://issues.redhat.com/browse/TC\n  productName: Red Hat\
        \ Trusted Profile Analyzer\n  brandImageSrc: branding/logo.svg\n  supportCaseUrl:\
        \ https://issues.redhat.com/projects/TC/issues/\n  supportCaseLabel: \"Support\
        \ (Jira)\"\n  aboutBackgroundSrc: \"\"\n  aboutBrandImageSrc: branding/about-logo.svg\n\
        \  showGithubLink: false\n\nfeatures:\n  dedicatedSearch: false\n  additionalPackageInformation:\
        \ false\n  showSource: false\n  scanner: false\n  uploader: true\n  showReport:\
        \ true\n  extendSection: true\n\nbombastic:\n\n  filters:\n    categories:\n\
        \n      - label: Products\n        options:\n\n          - type: check\n \
        \           label: UBI 7\n            id: ubi7\n            terms:\n     \
        \         - '\"pkg:oci/ubi7\"'\n\n          - type: check\n            label:\
        \ UBI 8\n            id: ubi8\n            terms:\n              - '\"pkg:oci/ubi8\"\
        '\n\n          - type: check\n            label: UBI 9\n            id: ubi9\n\
        \            terms:\n              - '\"pkg:oci/ubi9\"'\n\n          - type:\
        \ divider\n\n          - type: check\n            label: Red Hat Enterprise\
        \ Linux 7\n            id: rhel7\n            terms:\n              - '\"\
        cpe:/o:redhat:enterprise_linux:7\"'\n              - '\"cpe:/o:redhat:rhel_aus:7\"\
        '\n\n          - type: check\n            label: Red Hat Enterprise Linux\
        \ 8\n            id: rhel8\n            terms:\n              - '\"cpe:/o:redhat:enterprise_linux:8\"\
        '\n              - '\"cpe:/o:redhat:rhel_e4s:8.1\"'\n\n          - type: check\n\
        \            label: Red Hat Enterprise Linux 9\n            id: rhel9\n  \
        \          terms:\n              - '\"cpe:/o:redhat:enterprise_linux:9\"'\n\
        \n          - type: divider\n\n          - type: check\n            label:\
        \ Ansible\n            id: ansible\n            terms:\n              - '\"\
        cpe:/a:redhat:ansible_automation_platform\"'\n\n          - type: check\n\
        \            label: AMQ\n            id: amq\n            terms:\n       \
        \       - '\"cpe:/a:redhat:amq\" OR \"amq-\"'\n\n          - type: check\n\
        \            label: Quarkus\n            id: quarkus\n            terms:\n\
        \              - '\"quarkus\"'\n\n      - label: Type\n        options:\n\
        \          - type: check\n            label: Container\n            id: is_container\n\
        \            terms:\n              - 'type:oci'\n\n          - type: check\n\
        \            label: Product\n            id: is_product\n            terms:\n\
        \              - 'NOT type:oci'\n\n      - label: Suppliers\n        options:\n\
        \          - type: check\n            label: Red Hat\n            id: supplier_redhat\n\
        \            terms:\n              - 'supplier:\"Organization: Red Hat\"'\n\
        \n      - label: Created on\n        options:\n          - type: select\n\
        \            group: created-on\n            default: any\n            options:\n\
        \              - id: last-week\n                label: Last 7 days\n     \
        \           script: |\n                  const end = new Date();\n       \
        \           const start = new Date(end.getTime() - (7 * 24 * 60 * 60 * 1000));\n\
        \                  [\n                    \"created:\" + \n              \
        \      start.toLocaleString(\"default\", { year: \"numeric\" }) + \"-\" +\n\
        \                    start.toLocaleString(\"default\", { month: \"2-digit\"\
        \ }) + \"-\" +\n                    start.toLocaleString(\"default\", { day:\
        \ \"2-digit\" }) + \"..\" +\n                    end.toLocaleString(\"default\"\
        , { year: \"numeric\" }) + \"-\" +\n                    end.toLocaleString(\"\
        default\", { month: \"2-digit\" }) + \"-\" +\n                    end.toLocaleString(\"\
        default\", { day: \"2-digit\" })\n                  ];\n              - id:\
        \ last-month\n                label: Last 30 days\n                script:\
        \ |\n                  const end = new Date();\n                  const start\
        \ = new Date(end.getTime() - (30 * 24 * 60 * 60 * 1000));\n              \
        \    [\n                    \"created:\" + \n                    start.toLocaleString(\"\
        default\", { year: \"numeric\" }) + \"-\" +\n                    start.toLocaleString(\"\
        default\", { month: \"2-digit\" }) + \"-\" +\n                    start.toLocaleString(\"\
        default\", { day: \"2-digit\" }) + \"..\" +\n                    end.toLocaleString(\"\
        default\", { year: \"numeric\" }) + \"-\" +\n                    end.toLocaleString(\"\
        default\", { month: \"2-digit\" }) + \"-\" +\n                    end.toLocaleString(\"\
        default\", { day: \"2-digit\" })\n                  ];\n              - id:\
        \ this-year\n                label: This year\n                script: |\n\
        \                  const date = new Date();\n                  const start\
        \ = new Date(date.getFullYear(), 0, 1);\n                  const end = new\
        \ Date(date.getFullYear()+1, 0, 1);\n                  [\n               \
        \     \"created:\" + \n                    start.toLocaleString(\"default\"\
        , { year: \"numeric\" }) + \"-\" +\n                    start.toLocaleString(\"\
        default\", { month: \"2-digit\" }) + \"-\" +\n                    start.toLocaleString(\"\
        default\", { day: \"2-digit\" }) + \"..\" +\n                    end.toLocaleString(\"\
        default\", { year: \"numeric\" }) + \"-\" +\n                    end.toLocaleString(\"\
        default\", { month: \"2-digit\" }) + \"-\" +\n                    end.toLocaleString(\"\
        default\", { day: \"2-digit\" })\n                  ];\n              - id:\
        \ \"2023\"\n                label: \"2023\"\n                terms:\n    \
        \              - 'created:2023-01-01..2024-01-01'\n              - id: \"\
        2022\"\n                label: \"2022\"\n                terms:\n        \
        \          - 'created:2022-01-01..2023-01-01'\n              - id: \"any\"\
        \n                label: \"Any time\"\n\nvexination:\n\n  filters:\n    categories:\n\
        \      - label: Severity\n        options:\n          - type: check\n    \
        \        id: low\n            label: |\n              <span class=\"tc-c-severity\"\
        >\n                  <span class=\"tc-c-severity__icon\"> <span class=\"tc-m-severity-low\"\
        > <i class=\"fa fa-shield-halved\"></i> </span></span>\n                 \
        \ <span class=\"tc-c-severity__text\"> Low </span>\n              </span>\n\
        \            terms:\n              - \"severity:Low\"\n\n          - type:\
        \ check\n            id: moderate\n            label: |\n              <span\
        \ class=\"tc-c-severity\">\n                  <span class=\"tc-c-severity__icon\"\
        > <span class=\"tc-m-severity-moderate\"> <i class=\"fa fa-shield-halved\"\
        ></i> </span></span>\n                  <span class=\"tc-c-severity__text\"\
        > Moderate </span>\n              </span>\n            terms:\n          \
        \    - \"severity:Moderate\"\n\n          - type: check\n            id: important\n\
        \            label: |\n              <span class=\"tc-c-severity\">\n    \
        \              <span class=\"tc-c-severity__icon\"> <span class=\"tc-m-severity-important\"\
        > <i class=\"fa fa-shield-halved\"></i> </span></span>\n                 \
        \ <span class=\"tc-c-severity__text\"> Important </span>\n              </span>\n\
        \            terms:\n              - \"severity:Important\"\n\n          -\
        \ type: check\n            id: critical\n            label: |\n          \
        \    <span class=\"tc-c-severity\">\n                  <span class=\"tc-c-severity__icon\"\
        > <span class=\"tc-m-severity-critical\"> <i class=\"fa fa-shield-halved\"\
        ></i> </span></span>\n                  <span class=\"tc-c-severity__text\"\
        > Critical </span>\n              </span>\n            terms:\n          \
        \    - \"severity:Critical\"\n\n      - label: Products\n        options:\n\
        \n          - type: check\n            id: rhel7\n            label: Red Hat\
        \ Enterprise Linux 7\n            terms:\n              - '( \"cpe:/o:redhat:rhel_eus:7\"\
        \ in:package )'\n\n          - type: check\n            id: rhel8\n      \
        \      label: Red Hat Enterprise Linux 8\n            terms:\n           \
        \   - '( \"cpe:/o:redhat:rhel_eus:8\" in:package )'\n\n          - type: check\n\
        \            id: rhel9\n            label: Red Hat Enterprise Linux 9\n  \
        \          terms:\n              - '( \"cpe:/a:redhat:enterprise_linux:9\"\
        \ in:package )'\n\n          - type: divider\n\n          - type: check\n\
        \            id: ocp3\n            label: OpenShift Container Platform 3\n\
        \            terms:\n              - '( \"cpe:/a:redhat:openshift:3\" in:package\
        \ )'\n\n          - type: check\n            id: ocp4\n            label:\
        \ OpenShift Container Platform 4\n            terms:\n              - '( \"\
        cpe:/a:redhat:openshift:4\" in:package )'\n\n      - label: Revisions\n  \
        \      options:\n          - type: select\n            group: release\n  \
        \          default: any\n            options:\n              - id: last-week\n\
        \                label: Last 7 days\n                script: |\n         \
        \         const end = new Date();\n                  const start = new Date(end.getTime()\
        \ - (7 * 24 * 60 * 60 * 1000));\n                  [\n                   \
        \ \"release:\" +\n                    start.toLocaleString(\"default\", {\
        \ year: \"numeric\" }) + \"-\" +\n                    start.toLocaleString(\"\
        default\", { month: \"2-digit\" }) + \"-\" +\n                    start.toLocaleString(\"\
        default\", { day: \"2-digit\" }) + \"..\" +\n                    end.toLocaleString(\"\
        default\", { year: \"numeric\" }) + \"-\" +\n                    end.toLocaleString(\"\
        default\", { month: \"2-digit\" }) + \"-\" +\n                    end.toLocaleString(\"\
        default\", { day: \"2-digit\" })\n                  ];\n              - id:\
        \ last-month\n                label: Last 30 days\n                script:\
        \ |\n                  const end = new Date();\n                  const start\
        \ = new Date(end.getTime() - (30 * 24 * 60 * 60 * 1000));\n              \
        \    [\n                    \"release:\" +\n                    start.toLocaleString(\"\
        default\", { year: \"numeric\" }) + \"-\" +\n                    start.toLocaleString(\"\
        default\", { month: \"2-digit\" }) + \"-\" +\n                    start.toLocaleString(\"\
        default\", { day: \"2-digit\" }) + \"..\" +\n                    end.toLocaleString(\"\
        default\", { year: \"numeric\" }) + \"-\" +\n                    end.toLocaleString(\"\
        default\", { month: \"2-digit\" }) + \"-\" +\n                    end.toLocaleString(\"\
        default\", { day: \"2-digit\" })\n                  ];\n              - id:\
        \ this-year\n                label: This year\n                script: |\n\
        \                  const date = new Date();\n                  const start\
        \ = new Date(date.getFullYear(), 0, 1);\n                  const end = new\
        \ Date(date.getFullYear()+1, 0, 1);\n                  [\n               \
        \     \"release:\" +\n                    start.toLocaleString(\"default\"\
        , { year: \"numeric\" }) + \"-\" +\n                    start.toLocaleString(\"\
        default\", { month: \"2-digit\" }) + \"-\" +\n                    start.toLocaleString(\"\
        default\", { day: \"2-digit\" }) + \"..\" +\n                    end.toLocaleString(\"\
        default\", { year: \"numeric\" }) + \"-\" +\n                    end.toLocaleString(\"\
        default\", { month: \"2-digit\" }) + \"-\" +\n                    end.toLocaleString(\"\
        default\", { day: \"2-digit\" })\n                  ];\n              - id:\
        \ \"2023\"\n                label: \"2023\"\n                terms:\n    \
        \              - 'release:2023-01-01..2024-01-01'\n              - id: \"\
        2022\"\n                label: \"2022\"\n                terms:\n        \
        \          - 'release:2022-01-01..2023-01-01'\n              - id: \"any\"\
        \n                label: \"Any time\"\n\ncve:\n  filters:\n    categories:\n\
        \n      - label: State\n        options:\n          - type: select\n     \
        \       default: published\n            group: state\n            options:\n\
        \              - id: any\n                label: Any\n                terms:\
        \ [ ]\n              - id: published\n                label: Published\n \
        \               terms:\n                  - \"is:published\"\n           \
        \   - id: rejected\n                label: Rejected\n                terms:\n\
        \                  - \"is:rejected\"\n\n      - label: CVSS\n        options:\n\
        \          - type: check\n            id: low\n            label: |\n    \
        \          <span class=\"tc-c-severity\">\n                  <span class=\"\
        tc-c-severity__icon\"> <span class=\"tc-m-severity-low\"> <i class=\"fa fa-shield-halved\"\
        ></i> </span></span>\n                  <span class=\"tc-c-severity__text\"\
        > Low </span>\n              </span>\n            terms:\n              -\
        \ \"severity:low\"\n\n          - type: check\n            id: moderate\n\
        \            label: |\n              <span class=\"tc-c-severity\">\n    \
        \              <span class=\"tc-c-severity__icon\"> <span class=\"tc-m-severity-moderate\"\
        > <i class=\"fa fa-shield-halved\"></i> </span></span>\n                 \
        \ <span class=\"tc-c-severity__text\"> Medium </span>\n              </span>\n\
        \            terms:\n              - \"severity:medium\"\n\n          - type:\
        \ check\n            id: important\n            label: |\n              <span\
        \ class=\"tc-c-severity\">\n                  <span class=\"tc-c-severity__icon\"\
        > <span class=\"tc-m-severity-important\"> <i class=\"fa fa-shield-halved\"\
        ></i> </span></span>\n                  <span class=\"tc-c-severity__text\"\
        > High </span>\n              </span>\n            terms:\n              -\
        \ \"severity:high\"\n\n          - type: check\n            id: critical\n\
        \            label: |\n              <span class=\"tc-c-severity\">\n    \
        \              <span class=\"tc-c-severity__icon\"> <span class=\"tc-m-severity-critical\"\
        > <i class=\"fa fa-shield-halved\"></i> </span></span>\n                 \
        \ <span class=\"tc-c-severity__text\"> Critical </span>\n              </span>\n\
        \            terms:\n              - \"severity:critical\"\n\n      - label:\
        \ Published\n        options:\n          - type: select\n            group:\
        \ date-published\n            default: any\n            options:\n       \
        \       - id: last-week\n                label: Last 7 days\n            \
        \    script: |\n                  const end = new Date();\n              \
        \    const start = new Date(end.getTime() - (7 * 24 * 60 * 60 * 1000));\n\
        \                  [\n                    \"datePublished:\" +\n         \
        \           start.toLocaleString(\"default\", { year: \"numeric\" }) + \"\
        -\" +\n                    start.toLocaleString(\"default\", { month: \"2-digit\"\
        \ }) + \"-\" +\n                    start.toLocaleString(\"default\", { day:\
        \ \"2-digit\" }) + \"..\" +\n                    end.toLocaleString(\"default\"\
        , { year: \"numeric\" }) + \"-\" +\n                    end.toLocaleString(\"\
        default\", { month: \"2-digit\" }) + \"-\" +\n                    end.toLocaleString(\"\
        default\", { day: \"2-digit\" })\n                  ];\n              - id:\
        \ last-month\n                label: Last 30 days\n                script:\
        \ |\n                  const end = new Date();\n                  const start\
        \ = new Date(end.getTime() - (30 * 24 * 60 * 60 * 1000));\n              \
        \    [\n                    \"datePublished:\" +\n                    start.toLocaleString(\"\
        default\", { year: \"numeric\" }) + \"-\" +\n                    start.toLocaleString(\"\
        default\", { month: \"2-digit\" }) + \"-\" +\n                    start.toLocaleString(\"\
        default\", { day: \"2-digit\" }) + \"..\" +\n                    end.toLocaleString(\"\
        default\", { year: \"numeric\" }) + \"-\" +\n                    end.toLocaleString(\"\
        default\", { month: \"2-digit\" }) + \"-\" +\n                    end.toLocaleString(\"\
        default\", { day: \"2-digit\" })\n                  ];\n              - id:\
        \ this-year\n                label: This year\n                script: |\n\
        \                  const date = new Date();\n                  const start\
        \ = new Date(date.getFullYear(), 0, 1);\n                  const end = new\
        \ Date(date.getFullYear()+1, 0, 1);\n                  [\n               \
        \     \"datePublished:\" +\n                    start.toLocaleString(\"default\"\
        , { year: \"numeric\" }) + \"-\" +\n                    start.toLocaleString(\"\
        default\", { month: \"2-digit\" }) + \"-\" +\n                    start.toLocaleString(\"\
        default\", { day: \"2-digit\" }) + \"..\" +\n                    end.toLocaleString(\"\
        default\", { year: \"numeric\" }) + \"-\" +\n                    end.toLocaleString(\"\
        default\", { month: \"2-digit\" }) + \"-\" +\n                    end.toLocaleString(\"\
        default\", { day: \"2-digit\" })\n                  ];\n              - id:\
        \ \"2023\"\n                label: \"2023\"\n                terms:\n    \
        \              - 'datePublished:2023-01-01..2024-01-01'\n              - id:\
        \ \"2022\"\n                label: \"2022\"\n                terms:\n    \
        \              - 'datePublished:2022-01-01..2023-01-01'\n              - id:\
        \ \"any\"\n                label: \"Any time\"\n\npackages:\n\n  filters:\n\
        \    categories:\n\n      - label: Type\n        options:\n\n          - type:\
        \ check\n            label: maven\n            id: maven\n            terms:\n\
        \              - 'type:maven'\n\n          - type: check\n            label:\
        \ RPM\n            id: RPM\n            terms:\n              - 'type:rpm'\n\
        \n          - type: check\n            label: NPM\n            id: NPM\n \
        \           terms:\n              - 'type:npm'\n\n      - label: Supplier\n\
        \        options:\n\n          - type: check\n            label: Red Hat\n\
        \            id: redhat\n            terms:\n              - 'supplier:\"\
        Organization: Red Hat\"'\n\nscanner:\n  documentationUrl: https://red.ht/trusted\n\
        \  welcomeHint:\n    title: |\n      <h2 class=\"pf-v5-c-title pf-m-2xl\"\
        \ style=\"text-align: center;\">\n        Receive a detailed summary of your\
        \ SBOM stack including:\n      </h2>\n    body: |\n      <div class=\"pf-v5-l-flex\
        \ pf-m-gutter\">\n        <div class=\"pf-v5-l-flex pf-m-flex-1 pf-m-column\
        \ pf-v5-u-p-xl\">\n          <div class=\"pf-v5-l-flex__item pf-m-align-self-center\"\
        ><img width=\"64\" src=\"branding/Icon-Red_Hat-Clipboard_Checklist-A-Red-RGB.svg\"\
        /></div>\n          <div class=\"pf-v5-l-flex__item pf-m-align-self-center\
        \ pf-v5-u-font-family-heading pf-v5-u-font-size-lg\" style=\"width: 192px;\
        \ text-align: center;\">Security issues</div>\n        </div>\n        <div\
        \ class=\"pf-v5-c-divider pf-m-vertical pf-m-inset-md\" role=\"separator\"\
        ></div>\n        <div class=\"pf-v5-l-flex pf-m-flex-1 pf-m-column pf-v5-u-p-xl\"\
        >\n          <div class=\"pf-v5-l-flex__item pf-m-align-self-center\"><img\
        \ width=\"64\" src=\"branding/Icon-Red_Hat-Vulnerability-A-Red-RGB.svg\"/></div>\n\
        \          <div class=\"pf-v5-l-flex__item pf-m-align-self-center pf-v5-u-font-family-heading\
        \ pf-v5-u-font-size-lg\" style=\"width: 192px; text-align: center;\">Licenses</div>\n\
        \        </div>\n        <div class=\"pf-v5-c-divider pf-m-vertical pf-m-inset-md\"\
        \ role=\"separator\"></div>\n        <div class=\"pf-v5-l-flex pf-m-flex-1\
        \ pf-m-column pf-v5-u-p-xl\">\n          <div class=\"pf-v5-l-flex__item pf-m-align-self-center\"\
        ><img width=\"64\" src=\"branding/Icon-Red_Hat-Bug-A-Red-RGB.svg\"/></div>\n\
        \          <div class=\"pf-v5-l-flex__item pf-m-align-self-center pf-v5-u-font-family-heading\
        \ pf-v5-u-font-size-lg\" style=\"width: 192px; text-align: center;\">Dependency\
        \ details</div>\n        </div>\n      </div>\n\nlandingPage:\n  headerContent:\
        \ |\n    <section\n      class=\"pf-v5-c-page__main-section pf-m-light pf-m-shadow-bottom\"\
        \n      style=\"\n        background-image: url('branding/CND-AppSpeed-Keyart-2_at_2x.png');\n\
        \        background-repeat: no-repeat;\n        background-position: right;\n\
        \        background-size: contain;\n      \"\n    >\n      <div class=\"pf-v5-l-grid\
        \ pf-m-gutter\">\n        <div class=\"pf-v5-l-grid__item pf-m-8-col\">\n\
        \          <div class=\"pf-v5-c-content\">\n            <h1 class=\"pf-v5-c-title\
        \ pf-m-2xl\">Red Hat Trusted Profile Analyzer</h1>\n            <p class=\"\
        pf-v5-u-color-200\">A managed service for software supply chain security</p>\n\
        \            <p>\n              The Red Hat Trusted Profile Analyzer service\
        \ brings awareness to and remediation of Open Source Software (OSS) vulnerabilities\
        \ that are discovered within the software supply chain.\n              The\
        \ Red Hat Trusted Profile Analyzer service works within the software supply\
        \ chain by helping developers to identify, and resolve security vulnerabilities\
        \ during their development cycle.\n            </p>\n          </div>\n  \
        \      </div>\n      </div>\n    </section>\n\n  beforeInnerContent: |\n \
        \   <div class=\"pf-v5-u-mt-xl\"></div>\n\n  afterInnerContent: |\n    <div\
        \ class=\"pf-v5-l-bullseye pf-v5-u-mt-xl\">\n      <div class=\"pf-v5-l-bullseye__item\"\
        >\n        <div class=\"pf-v5-l-flex pf-m-gutter\">\n          <div class=\"\
        pf-v5-l-flex pf-m-column\">\n            <div class=\"pf-v5-l-flex__item pf-m-align-self-center\"\
        ><img width=\"64\" src=\"branding/Icon-Red_Hat-Clipboard_Checklist-A-Red-RGB.svg\"\
        /></div>\n            <div class=\"pf-v5-l-flex__item pf-m-align-self-center\"\
        \ style=\"width: 192px; text-align: center;\">I need an SBOM for…</div>\n\
        \          </div>\n          <div class=\"pf-v5-l-flex pf-m-column\">\n  \
        \          <div class=\"pf-v5-l-flex__item pf-m-align-self-center\"><img width=\"\
        64\" src=\"branding/Icon-Red_Hat-Vulnerability-A-Red-RGB.svg\"/></div>\n \
        \           <div class=\"pf-v5-l-flex__item pf-m-align-self-center\" style=\"\
        width: 192px; text-align: center;\">I have an SBOM and need vulnerability\
        \ information</div>\n          </div>\n          <div class=\"pf-v5-l-flex\
        \ pf-m-column\">\n            <div class=\"pf-v5-l-flex__item pf-m-align-self-center\"\
        ><img width=\"64\" src=\"branding/Icon-Red_Hat-Bug-A-Red-RGB.svg\"/></div>\n\
        \            <div class=\"pf-v5-l-flex__item pf-m-align-self-center\" style=\"\
        width: 192px; text-align: center;\">I need information on a specific vulnerability</div>\n\
        \          </div>\n          <div class=\"pf-v5-l-flex pf-m-column\">\n  \
        \          <div class=\"pf-v5-l-flex__item pf-m-align-self-center\"><img width=\"\
        64\" src=\"branding/Icon-Red_Hat-Catalog-A-Red-RGB.svg\"/></div>\n       \
        \     <div class=\"pf-v5-l-flex__item pf-m-align-self-center\" style=\"width:\
        \ 192px; text-align: center;\">I want to browse by category: UBI, RHEL, …</div>\n\
        \          </div>\n        </div>\n      </div>\n    </div>\n\n  afterOuterContent:\
        \ |\n    <div class=\"pf-v5-l-grid__item pf-m-6-col\">\n      <div class=\"\
        pf-v5-c-card pf-m-full-height\">\n        <div class=\"pf-v5-c-card__title\"\
        >\n          <h2 class=\"pf-v5-c-card__title-text\">Upload your SBOM</h2>\n\
        \        </div>\n        <div class=\"pf-v5-c-card__body\">\n          By\
        \ uploading your Software Bill of Materials (SBOM) file, you receive a detailed\
        \ report of dependencies, and potential vulnerabilities within your software\
        \ stack.\n\n          Start by clicking the <strong>Upload an SBOM</strong>\
        \ button.\n        </div>\n        <div class=\"pf-v5-c-card__body\">\n  \
        \        <div class=\"pf-v5-l-bullseye\">\n            <div class=\"pf-v5-l-bullseye__item\"\
        >\n              <a\n                class=\"pf-v5-c-button pf-m-primary pf-m-display-lg\"\
        \n                type=\"button\"\n                onclick=\"window.wasmBindings.spogNavigateTo('/sbomuploader');\
        \ return false;\"\n              >Upload an SBOM</a>\n            </div>\n\
        \          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"\
        pf-v5-l-grid__item pf-m-6-col\">\n      <div class=\"pf-v5-c-card pf-m-full-height\"\
        >\n        <div class=\"pf-v5-c-card__title\">\n          <h2 class=\"pf-v5-c-card__title-text\"\
        >Getting started!</h2>\n        </div>\n        <div class=\"pf-v5-c-card__body\"\
        >\n          <div class=\"pf-v5-l-gallery pf-m-gutter\">\n            <div\
        \ class=\"pf-v5-l-gallery__item\">\n              <a href=\"https://access.redhat.com/documentation/en-us/red_hat_trusted_profile_analyzer/1/html/quick_start_guide/searching-for-vulnerability-information_qsg\"\
        \ target=\"_blank\" class=\"pf-v5-c-button pf-m-inline pf-m-link\" type=\"\
        button\">Searching for vulnerability information</a>\n            </div>\n\
        \            <div class=\"pf-v5-l-gallery__item\">\n              <a href=\"\
        https://access.redhat.com/documentation/en-us/red_hat_trusted_profile_analyzer/1/html/quick_start_guide/scanning-an-sbom-file_qsg\"\
        \ target=\"_blank\" class=\"pf-v5-c-button pf-m-inline pf-m-link\" type=\"\
        button\">Scanning a software bill of materials file</a>\n            </div>\n\
        \            <div class=\"pf-v5-l-gallery__item\">\n              <a href=\"\
        https://access.redhat.com/documentation/en-us/red_hat_trusted_profile_analyzer/1/html/quick_start_guide/configuring-visual-studio-code-to-use-dependency-analytics_qsg\"\
        \ target=\"_blank\" class=\"pf-v5-c-button pf-m-inline pf-m-link\" type=\"\
        button\">Configuring Visual Studio Code to use Dependency Analytics</a>\n\
        \            </div>\n            <div class=\"pf-v5-l-gallery__item\">\n \
        \             <a href=\"https://access.redhat.com/documentation/en-us/red_hat_trusted_profile_analyzer/1/html/quick_start_guide/configuring-intellij-to-use-dependency-analytics_qsg\"\
        \ target=\"_blank\" class=\"pf-v5-c-button pf-m-inline pf-m-link\" type=\"\
        button\">Configuring IntelliJ to use Dependency Analytics</a>\n          \
        \  </div>\n            <div class=\"pf-v5-l-gallery__item\">\n           \
        \   <a href=\"https://access.redhat.com/documentation/en-us/red_hat_trusted_profile_analyzer/1/html/reference_guide/glossary_ref\"\
        \ target=\"_blank\" class=\"pf-v5-c-button pf-m-inline pf-m-link\" type=\"\
        button\">Glossary</a>\n            </div>\n            <div class=\"pf-v5-l-gallery__item\"\
        >\n              <a href=\"https://access.redhat.com/documentation/en-us/red_hat_trusted_profile_analyzer/1/html/reference_guide/frequently-asked-questions_ref\"\
        \ target=\"_blank\" class=\"pf-v5-c-button pf-m-inline pf-m-link\" type=\"\
        button\">Frequently Asked Questions</a>\n            </div>\n          </div>\n\
        \        </div>\n      </div>\n    </div>"
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: spog-ui-branding
      labels:
        app.kubernetes.io/name: spog-ui-branding
        app.kubernetes.io/component: branding
        app.kubernetes.io/instance: redhat-trusted-profile-analyzer
        app.kubernetes.io/version: 1.2.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: trusted-profile-analyzer
    binaryData:
      CND-AppSpeed-Keyart-2_at_2x.png: 
      Icon-Red_Hat-Bug-A-Red-RGB.svg: PHN2ZyBpZD0iZTkxZTNlZDQtODRkZS00YjFhLTk3YWEtOGI2MmNkOTdkZDk4IiBkYXRhLW5hbWU9Ikljb24iIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgdmlld0JveD0iMCAwIDM2IDM2Ij4KICA8ZGVmcz4KICAgIDxzdHlsZT4KICAgICAgLmJmZmJlZTNiLTRiMDYtNGUyZC04ZWIyLTU4YjM1MDhjZWIyNSB7CiAgICAgICAgZmlsbDogI2UwMDsKICAgICAgfQogICAgPC9zdHlsZT4KICA8L2RlZnM+CiAgPHBhdGggY2xhc3M9ImJmZmJlZTNiLTRiMDYtNGUyZC04ZWIyLTU4YjM1MDhjZWIyNSIgZD0iTTMyLjE4LDIwLjY1SDI3LjMyYTkuMzMsOS4zMywwLDAsMC0uNzUtMy4xMmgyLjM0YS42LjYsMCwwLDAsLjQ0LS4xOGwyLjE4LTIuMThhLjYyLjYyLDAsMCwwLS44OC0uODhsLTIsMkgyNS45YTkuNDEsOS40MSwwLDAsMC01LjQzLTQsMy45LDMuOSwwLDEsMC00Ljk0LDAsOS40MSw5LjQxLDAsMCwwLTUuNDMsNEg3LjM1bC0yLTJhLjYyLjYyLDAsMCwwLS44OC44OGwyLjE4LDIuMThhLjYuNiwwLDAsMCwuNDQuMThIOS40M2E5LjMzLDkuMzMsMCwwLDAtLjc1LDMuMTJIMy44MmEuNjMuNjMsMCwxLDAsMCwxLjI1SDguNjhBOS4yMSw5LjIxLDAsMCwwLDkuNDMsMjVINy4wOWEuNjUuNjUsMCwwLDAtLjQ0LjE4TDQuNDcsMjcuMzhhLjYxLjYxLDAsMCwwLDAsLjg4LjYzLjYzLDAsMCwwLC44OCwwbDItMkgxMC4xYTkuMzQsOS4zNCwwLDAsMCwxNS44LDBoMi43NWwyLDJhLjYzLjYzLDAsMCwwLC44OCwwLC42MS42MSwwLDAsMCwwLS44OGwtMi4xOC0yLjE5YS42NS42NSwwLDAsMC0uNDQtLjE4SDI2LjU3YTkuMjEsOS4yMSwwLDAsMCwuNzUtMy4xMWg0Ljg2YS42My42MywwLDEsMCwwLTEuMjVaTTE1LjM1LDkuMjdBMi42NSwyLjY1LDAsMSwxLDE4LDExLjkyLDIuNjUsMi42NSwwLDAsMSwxNS4zNSw5LjI3Wk0xOCwyOS4zOGE4LjExLDguMTEsMCwxLDEsOC4xLTguMTFBOC4xMSw4LjExLDAsMCwxLDE4LDI5LjM4WiIvPgo8L3N2Zz4K
      Icon-Red_Hat-Catalog-A-Red-RGB.svg: PHN2ZyBpZD0iYTI0YzBiMzEtZmY3Yy00ZmE5LWI3ZDEtYWE0ZmI0NWUwNGRjIiBkYXRhLW5hbWU9Ikljb24iIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgdmlld0JveD0iMCAwIDM2IDM2Ij4KICA8ZGVmcz4KICAgIDxzdHlsZT4KICAgICAgLmEwMmY0YTUwLTMwZjktNDFkOC1hYjE5LTg3ODJkZWY4NmY1YSB7CiAgICAgICAgZmlsbDogI2UwMDsKICAgICAgfQogICAgPC9zdHlsZT4KICA8L2RlZnM+CiAgPGc+CiAgICA8cGF0aCBjbGFzcz0iYTAyZjRhNTAtMzBmOS00MWQ4LWFiMTktODc4MmRlZjg2ZjVhIiBkPSJNMzEsNC4zOEg1QS42Mi42MiwwLDAsMCw0LjM4LDV2NmEuNjIuNjIsMCwwLDAsLjYyLjYyaDhhLjYyLjYyLDAsMCwwLDAtMS4yNEg1LjYyVjUuNjJIMzAuMzh2NC43NkgyMmEuNjIuNjIsMCwwLDAsMCwxLjI0aDlhLjYyLjYyLDAsMCwwLC42Mi0uNjJWNUEuNjIuNjIsMCwwLDAsMzEsNC4zOFoiLz4KICAgIDxwYXRoIGNsYXNzPSJhMDJmNGE1MC0zMGY5LTQxZDgtYWIxOS04NzgyZGVmODZmNWEiIGQ9Ik02Ljk0LDE5LjM4SDUuNjJWMTQuNjJIMTNhLjYyLjYyLDAsMCwwLDAtMS4yNEg1YS42Mi42MiwwLDAsMC0uNjIuNjJ2NmEuNjIuNjIsMCwwLDAsLjYyLjYySDYuOTRBLjYyLjYyLDAsMCwwLDYuOTQsMTkuMzhaIi8+CiAgICA8cGF0aCBjbGFzcz0iYTAyZjRhNTAtMzBmOS00MWQ4LWFiMTktODc4MmRlZjg2ZjVhIiBkPSJNMzEsMTMuMzhIMjJhLjYyLjYyLDAsMCwwLDAsMS4yNGg5QS42Mi42MiwwLDAsMCwzMSwxMy4zOFoiLz4KICAgIDxwYXRoIGNsYXNzPSJhMDJmNGE1MC0zMGY5LTQxZDgtYWIxOS04NzgyZGVmODZmNWEiIGQ9Ik0yOC4xNCwxOC4zOSwxOS42MiwxNi41di02YTIuMTIsMi4xMiwwLDAsMC00LjI0LDBWMjFjLTEuMTEtMS40MS0yLjU0LTIuODEtMy44OC0yLjgxYTIuMTIsMi4xMiwwLDAsMC0xLjIyLDMuODYsMi44NCwyLjg0LDAsMCwxLDEuMSwyQzEzLDM0LjY3LDI4LjMzLDMzLjc4LDI4LjYyLDIzVjE5QS42Mi42MiwwLDAsMCwyOC4xNCwxOC4zOVpNMjcuMzgsMjNjLS4yMyw5LjIxLTEzLjQsMTAtMTQuNzYuOTJBNC4xLDQuMSwwLDAsMCwxMSwyMS4wNWEuODcuODcsMCwwLDEsLjUtMS41OGMuODksMCwyLjQ5LDEuNTUsNCwzLjg3QS42My42MywwLDAsMCwxNi42MiwyM1YxMC41YS44OC44OCwwLDAsMSwxLjc2LDBWMTdhLjYyLjYyLDAsMCwwLC40OC42MWw4LjUyLDEuODlaIi8+CiAgPC9nPgo8L3N2Zz4K
      Icon-Red_Hat-Clipboard_Checklist-A-Red-RGB.svg: PHN2ZyBpZD0iYWZlYTNmMDItZTA4Yi00ZmUxLWE2MzMtZGJlNGIxNjlmNTg4IiBkYXRhLW5hbWU9Ikljb24iIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgdmlld0JveD0iMCAwIDM2IDM2Ij4KICA8ZGVmcz4KICAgIDxzdHlsZT4KICAgICAgLmJjZTNlYWU1LWQ0MzItNDVjYS05MTAzLTdhN2YwZTBiMDkwOSB7CiAgICAgICAgZmlsbDogI2UwMDsKICAgICAgfQogICAgPC9zdHlsZT4KICA8L2RlZnM+CiAgPGc+CiAgICA8cGF0aCBjbGFzcz0iYmNlM2VhZTUtZDQzMi00NWNhLTkxMDMtN2E3ZjBlMGIwOTA5IiBkPSJNMjIsMjAuNzFhLjYyLjYyLDAsMCwwLS42Mi42MnYyLjA1SDE0LjYyVjE2LjYyaDQuNzFhLjYyLjYyLDAsMCwwLDAtMS4yNEgxNGEuNjIuNjIsMCwwLDAtLjYyLjYydjhhLjYyLjYyLDAsMCwwLC42Mi42Mmg4YS42Mi42MiwwLDAsMCwuNjItLjYyVjIxLjMzQS42Mi42MiwwLDAsMCwyMiwyMC43MVoiLz4KICAgIDxwYXRoIGNsYXNzPSJiY2UzZWFlNS1kNDMyLTQ1Y2EtOTEwMy03YTdmMGUwYjA5MDkiIGQ9Ik0xNy4xMSwxOS41NmEuNjMuNjMsMCwxLDAtLjg5Ljg4bDEuMzQsMS4zNGEuNjMuNjMsMCwwLDAsLjg4LDBsNC00YS42My42MywwLDAsMC0uODgtLjg5TDE4LDIwLjQ1WiIvPgogICAgPHBhdGggY2xhc3M9ImJjZTNlYWU1LWQ0MzItNDVjYS05MTAzLTdhN2YwZTBiMDkwOSIgZD0iTTI3LDcuMzhIMjNhLjYyLjYyLDAsMCwwLS42Mi42MlY5LjE4SDEzLjYyVjhBLjYyLjYyLDAsMCwwLDEzLDcuMzhIOUEuNjIuNjIsMCwwLDAsOC4zOCw4VjMxYS42Mi42MiwwLDAsMCwuNjIuNjJIMjdhLjYyLjYyLDAsMCwwLC42Mi0uNjJWOEEuNjIuNjIsMCwwLDAsMjcsNy4zOFptLS42MiwyM0g5LjYyVjguNjJoMi43NlY5LjgxYS42Mi42MiwwLDAsMCwuNjIuNjJIMjNhLjYyLjYyLDAsMCwwLC42Mi0uNjJWOC42MmgyLjc2WiIvPgogICAgPHBhdGggY2xhc3M9ImJjZTNlYWU1LWQ0MzItNDVjYS05MTAzLTdhN2YwZTBiMDkwOSIgZD0iTTEyLDYuNjJoMy4wOWEuNjMuNjMsMCwwLDAsLjY3LS40LDIuMzksMi4zOSwwLDAsMSw0LjQ4LDAsLjYuNiwwLDAsMCwuNjguNEgyNGEuNjIuNjIsMCwwLDAsMC0xLjI0SDIxLjIzYTMuNjMsMy42MywwLDAsMC02LjQ2LDBIMTJBLjYyLjYyLDAsMCwwLDEyLDYuNjJaIi8+CiAgICA8Y2lyY2xlIGNsYXNzPSJiY2UzZWFlNS1kNDMyLTQ1Y2EtOTEwMy03YTdmMGUwYjA5MDkiIGN4PSIxOCIgY3k9IjYiIHI9IjAuNjIiLz4KICA8L2c+Cjwvc3ZnPgo=
      Icon-Red_Hat-Vulnerability-A-Red-RGB.svg: PHN2ZyBpZD0iYmY4N2IxMWYtYjUyNS00ZGU1LThjMWMtNDE5Mjc0YTE2MzFjIiBkYXRhLW5hbWU9Ikljb24iIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgdmlld0JveD0iMCAwIDM2IDM2Ij4KICA8ZGVmcz4KICAgIDxzdHlsZT4KICAgICAgLmIxZTVjNGFiLTA5MTgtNDg0OS04YTU4LTUwZTM2ZWY1ZmQ4YSB7CiAgICAgICAgZmlsbDogI2UwMDsKICAgICAgfQogICAgPC9zdHlsZT4KICA8L2RlZnM+CiAgPGc+CiAgICA8cGF0aCBjbGFzcz0iYjFlNWM0YWItMDkxOC00ODQ5LThhNTgtNTBlMzZlZjVmZDhhIiBkPSJNMTgsMjMuMzhhLjYzLjYzLDAsMCwwLS42Mi42My42My42MywwLDAsMCwxLjI1LDBBLjYzLjYzLDAsMCwwLDE4LDIzLjM4WiIvPgogICAgPHBhdGggY2xhc3M9ImIxZTVjNGFiLTA5MTgtNDg0OS04YTU4LTUwZTM2ZWY1ZmQ4YSIgZD0iTTE4LDIwLjYyYS42Mi42MiwwLDAsMS0uNjItLjYyVjEyYS42Mi42MiwwLDEsMSwxLjI0LDB2OEEuNjIuNjIsMCwwLDEsMTgsMjAuNjJaIi8+CiAgICA8cGF0aCBjbGFzcz0iYjFlNWM0YWItMDkxOC00ODQ5LThhNTgtNTBlMzZlZjVmZDhhIiBkPSJNMTgsMzEuNjJBMTEuNjMsMTEuNjMsMCwwLDEsNi4zOCwyMFY3LjM0YS42MS42MSwwLDAsMSwuNDktLjYxbDExLTIuMzRhLjU3LjU3LDAsMCwxLC4yNiwwbDExLDIuMzRhLjYxLjYxLDAsMCwxLC40OS42MVYyMEExMS42MywxMS42MywwLDAsMSwxOCwzMS42MlpNNy42Miw3Ljg0VjIwYTEwLjM4LDEwLjM4LDAsMCwwLDIwLjc2LDBWNy44NEwxOCw1LjY0WiIvPgogIDwvZz4KPC9zdmc+Cg==
      about-logo.svg: PHN2ZyBpZD0iTGF5ZXJfMSIgZGF0YS1uYW1lPSJMYXllciAxIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCA2MTMgMTQ1Ij48ZGVmcz48c3R5bGU+LmNscy0xe2ZpbGw6I2UwMDt9LmNscy0ye2ZpbGw6I2ZmZjt9PC9zdHlsZT48L2RlZnM+PHRpdGxlPlJlZEhhdC1Mb2dvLUEtUmV2ZXJzZTwvdGl0bGU+PHBhdGggY2xhc3M9ImNscy0xIiBkPSJNMTI3LjQ3LDgzLjQ5YzEyLjUxLDAsMzAuNjEtMi41OCwzMC42MS0xNy40NmExNCwxNCwwLDAsMC0uMzEtMy40MmwtNy40NS0zMi4zNmMtMS43Mi03LjEyLTMuMjMtMTAuMzUtMTUuNzMtMTYuNkMxMjQuODksOC42OSwxMDMuNzYuNSw5Ny41MS41LDkxLjY5LjUsOTAsOCw4My4wNiw4Yy02LjY4LDAtMTEuNjQtNS42LTE3Ljg5LTUuNi02LDAtOS45MSw0LjA5LTEyLjkzLDEyLjUsMCwwLTguNDEsMjMuNzItOS40OSwyNy4xNkE2LjQzLDYuNDMsMCwwLDAsNDIuNTMsNDRjMCw5LjIyLDM2LjMsMzkuNDUsODQuOTQsMzkuNDVNMTYwLDcyLjA3YzEuNzMsOC4xOSwxLjczLDkuMDUsMS43MywxMC4xMywwLDE0LTE1Ljc0LDIxLjc3LTM2LjQzLDIxLjc3Qzc4LjU0LDEwNCwzNy41OCw3Ni42LDM3LjU4LDU4LjQ5YTE4LjQ1LDE4LjQ1LDAsMCwxLDEuNTEtNy4zM0MyMi4yNyw1MiwuNSw1NSwuNSw3NC4yMmMwLDMxLjQ4LDc0LjU5LDcwLjI4LDEzMy42NSw3MC4yOCw0NS4yOCwwLDU2LjctMjAuNDgsNTYuNy0zNi42NSwwLTEyLjcyLTExLTI3LjE2LTMwLjgzLTM1Ljc4Ii8+PHBhdGggZD0iTTE2MCw3Mi4wN2MxLjczLDguMTksMS43Myw5LjA1LDEuNzMsMTAuMTMsMCwxNC0xNS43NCwyMS43Ny0zNi40MywyMS43N0M3OC41NCwxMDQsMzcuNTgsNzYuNiwzNy41OCw1OC40OWExOC40NSwxOC40NSwwLDAsMSwxLjUxLTcuMzNsMy42Ni05LjA2QTYuNDMsNi40MywwLDAsMCw0Mi41Myw0NGMwLDkuMjIsMzYuMywzOS40NSw4NC45NCwzOS40NSwxMi41MSwwLDMwLjYxLTIuNTgsMzAuNjEtMTcuNDZhMTQsMTQsMCwwLDAtLjMxLTMuNDJaIi8+PHBhdGggY2xhc3M9ImNscy0yIiBkPSJNNTc5Ljc0LDkyLjhjMCwxMS44OSw3LjE1LDE3LjY3LDIwLjE5LDE3LjY3YTUyLjExLDUyLjExLDAsMCwwLDExLjg5LTEuNjhWOTVhMjQuODQsMjQuODQsMCwwLDEtNy42OCwxLjE2Yy01LjM3LDAtNy4zNi0xLjY4LTcuMzYtNi43M1Y2OC4zaDE1LjU2VjU0LjFINTk2Ljc4di0xOGwtMTcsMy42OFY1NC4xSDU2OC40OVY2OC4zaDExLjI1Wm0tNTMsLjMyYzAtMy42OCwzLjY5LTUuNDcsOS4yNi01LjQ3YTQzLjEyLDQzLjEyLDAsMCwxLDEwLjEsMS4yNnY3LjE1YTIxLjUxLDIxLjUxLDAsMCwxLTEwLjYzLDIuNjNjLTUuNDYsMC04LjczLTIuMS04LjczLTUuNTdtNS4yLDE3LjU2YzYsMCwxMC44NC0xLjI2LDE1LjM2LTQuMzF2My4zN2gxNi44MlY3NC4wOGMwLTEzLjU2LTkuMTQtMjEtMjQuMzktMjEtOC41MiwwLTE2Ljk0LDItMjYsNi4xbDYuMSwxMi41MmM2LjUyLTIuNzQsMTItNC40MiwxNi44My00LjQyLDcsMCwxMC42MiwyLjczLDEwLjYyLDguMzF2Mi43M2E0OS41Myw0OS41MywwLDAsMC0xMi42Mi0xLjU4Yy0xNC4zMSwwLTIyLjkzLDYtMjIuOTMsMTYuNzMsMCw5Ljc4LDcuNzgsMTcuMjQsMjAuMTksMTcuMjRtLTkyLjQ0LS45NGgxOC4wOVY4MC45MmgzMC4yOXYyOC44Mkg1MDZWMzYuMTJINDg3LjkzVjY0LjQxSDQ1Ny42NFYzNi4xMkg0MzkuNTVaTTM3MC42Miw4MS44N2MwLTgsNi4zMS0xNC4xLDE0LjYyLTE0LjFBMTcuMjIsMTcuMjIsMCwwLDEsMzk3LDcyLjA5VjkxLjU0QTE2LjM2LDE2LjM2LDAsMCwxLDM4NS4yNCw5NmMtOC4yLDAtMTQuNjItNi4xLTE0LjYyLTE0LjA5bTI2LjYxLDI3Ljg3aDE2LjgzVjMyLjQ0bC0xNywzLjY4VjU3LjA1YTI4LjMsMjguMywwLDAsMC0xNC4yLTMuNjhjLTE2LjE5LDAtMjguOTIsMTIuNTEtMjguOTIsMjguNWEyOC4yNSwyOC4yNSwwLDAsMCwyOC40LDI4LjYsMjUuMTIsMjUuMTIsMCwwLDAsMTQuOTMtNC44M1pNMzIwLDY3YzUuMzYsMCw5Ljg4LDMuNDcsMTEuNjcsOC44M0gzMDguNDdDMzEwLjE1LDcwLjMsMzE0LjM2LDY3LDMyMCw2N00yOTEuMzMsODJjMCwxNi4yLDEzLjI1LDI4LjgyLDMwLjI4LDI4LjgyLDkuMzYsMCwxNi4yLTIuNTMsMjMuMjUtOC40MmwtMTEuMjYtMTBjLTIuNjMsMi43NC02LjUyLDQuMjEtMTEuMTQsNC4yMWExNC4zOSwxNC4zOSwwLDAsMS0xMy42OC04LjgzaDM5LjY1VjgzLjU1YzAtMTcuNjctMTEuODgtMzAuMzktMjguMDgtMzAuMzlhMjguNTcsMjguNTcsMCwwLDAtMjksMjguODFNMjYyLDUxLjU4YzYsMCw5LjM2LDMuNzgsOS4zNiw4LjMxUzI2OCw2OC4yLDI2Miw2OC4ySDI0NC4xMVY1MS41OFptLTM2LDU4LjE2aDE4LjA5VjgyLjkyaDEzLjc3bDEzLjg5LDI2LjgySDI5MmwtMTYuMi0yOS40NWEyMi4yNywyMi4yNywwLDAsMCwxMy44OC0yMC43MmMwLTEzLjI1LTEwLjQxLTIzLjQ1LTI2LTIzLjQ1SDIyNloiLz48L3N2Zz4=
      android-chrome-192x192.png: 
      apple-touch-icon.png: 
      favicon-16x16.png: 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MjVUMTM6MDA6NDgrMDA6MDAY28i8AAAAKHRFWHRkYXRlOnRpbWVzdGFtcAAyMDIzLTEwLTI1VDEzOjAwOjU0KzAwOjAwRMSDiQAAABR0RVh0ZGM6Zm9ybWF0AGltYWdlL2pwZWfbYOTFAAAAMHRFWHRpY2M6Y29weXJpZ2h0AENvcHlyaWdodCAyMDAwIEFkb2JlIFN5c3RlbXMsIEluYy6pb7Z0AAAAKXRFWHRpY2M6ZGVzY3JpcHRpb24AVS5TLiBXZWIgQ29hdGVkIChTV09QKSB2MqZOuwAAAAAsdEVYdGlsbHVzdHJhdG9yOkNyZWF0b3JTdWJUb29sAEFkb2JlIElsbHVzdHJhdG9yPy3hZAAAAB50RVh0aWxsdXN0cmF0b3I6U3RhcnR1cFByb2ZpbGUAV2Viq1H4dwAAACR0RVh0cGRmOlByb2R1Y2VyAEFkb2JlIFBERiBsaWJyYXJ5IDE3LjAwBe90CwAAABp0RVh0cGRmeDpDcmVhdG9yVmVyc2lvbgAyMS4wLjDk9qXdAAAAKHRFWHR4bXA6Q3JlYXRlRGF0ZQAyMDIzLTEwLTEzVDExOjE4OjU0LTA0OjAwQIC86gAAADJ0RVh0eG1wOkNyZWF0b3JUb29sAEFkb2JlIElsbHVzdHJhdG9yIDI3LjcgKE1hY2ludG9zaClOX6GrAAAAKnRFWHR4bXA6TWV0YWRhdGFEYXRlADIwMjMtMTAtMTNUMTE6MTg6NTQtMDQ6MDDI2tNtAAAAI3RFWHR4bXA6TW9kaWZ5RGF0ZQAyMDIzLTEwLTEzVDE1OjE4OjU0Woh5jREAAAAZdEVYdHhtcE1NOkRlcml2ZWRGcm9tAGRlZmF1bHQsTATSAAAAPXRFWHR4bXBNTTpEb2N1bWVudElEAHhtcC5kaWQ6OTEwNjM3ZmUtYmI1ZS00MjUzLWEyOTEtMDY4MzNmYWQ5MTYzmlBMeAAAAD10RVh0eG1wTU06SW5zdGFuY2VJRAB4bXAuaWlkOjkxMDYzN2ZlLWJiNWUtNDI1My1hMjkxLTA2ODMzZmFkOTE2M+x323IAAAA+dEVYdHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRAB1dWlkOjY1RTYzOTA2ODZDRjExREJBNkUyRDg4N0NFQUNCNDA3WE7xaQAAABx0RVh0eG1wTU06UmVuZGl0aW9uQ2xhc3MAZGVmYXVsdNmS3IIAAAAASUVORK5CYII=
      favicon-32x32.png: 
      favicon.ico: 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AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADb29vb29vb28rKysrKysrKysrKysrKysrb29vb29vb29vb29vbuqysrKysrKysrKysrKysrKysrKysutvb29vb29vbwqa6ytvb29vb29vb29vb29vb29vb28q6psLb29vb28Kmytvb29vb29vb29vb29vb29vb29vb29vKpsLb29vbpsrb29vb29vb29vb29vb29vb29vb29vb29vKptvb27q629vb29vb29vb29vb29vb29vb29vb29vb29u6utvbrMrb29vb29vb29vb24MtrNvb29vb29vb29vb28qs29us29vb29vb29vb29vbgQMkrNvb29vbstvb29vb26zbyqzb29vb29vb29ulWh8NAQBm29vb23s9stvb29vbrMrKrNvb29vb29vbYxMZWlsCMMLb29t7NHvb29vb29usysqs29vb29vb21sDVazbi1fC29vbezR729vb29vb26zKyqzb29vb29tpA1/b25RMREROlHs0e9vb29vb29vbrMrKrNvb29vbrBlS28VrN0d0dEc0MXXb29vb29vb29usysqs29vb29teE6zbazqU29vb25Q6bNvb29vb29vb26zKyqzb29vb2yQw25o3fdvb29vb2300mdvb29vb29vbrMrKrNvb29usE2Pbb0Tb29vb29vb22+Z29vb29vb29usysqs29vb26UNg9tJTtvb29vb29vb28Lb29vb29vb26zKyqzb29vbpQ2D20tL29vb29vb22MhFyNp29vb29vbrMrKrNvb29vCGV7beT3F29vb29tfA1JjMANj29vb29usysqs29vb29stKdu0OnPb29vbwhlYxcXbUh/C29vb26zKyqzb29vb22kJjNt8NG2129uODXhFPZ2FDaXb29vbrMrKrNvb29vb2ygkwtt9PTpEfZsNcUlGQHcTpdvb29usysqs29vb29vbjhMtwtu2fXOXjhOM28VtdhOl29vb26zKyqzb29vb29vbixMhi9vb29uOA1WLpYtSCKXb29vbrMrbrNvb29vb29vbnCoIIVVejsJSGQkJCR5Swtvb29us29usytvb29vb29vb24tTJB1f29vCjoOOwtvb29vbyqzb27q629vb29vb29vb29vbwtvb29vb29vb29vb29u6utvb26bK29vb29vb29vb29vb29vb29vb29vb29vbyqbb29vbwqbK29vb29vb29vb29vb29vb29vb29vb28qmwtvb29vbwqa6ytvb29vb29vb29vb29vb29vb28q6psLb29vb29vb27qsrKysrKysrKysrKysrKysrKysrLrb29vb29vb29vb29vbysrKysrKysrKysrKysrKytvb29vb29vbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoAAAAQAAAAIAAAAABAAgAAAAAAAAQAAC6bgAAum4AAAABAAAAAQAAAwMCAAkJBwAMDAoAEA8NABUVEwAZGBcAHR0bACEhHwAkJCIAKSknAC0sKwAwLy4AMDAuADU1MgA6OTcAPDw6AEBAPgBEQ0IASEdGAElJRwBOTkwAUVFPAFVVUwBYWFYAXV1bAGBfXQBhYV8AZWVjAGlpZwBtbGsAcXFvAHR0cgB9fHsAHwD+ACIC/gAnCP8AKwv+AC8R/gAzFf4ANxr/ADkc/wA+Iv4AQSX+AEYr/wBJL/8ATDL+AFA2/wBUO/8AW0P/AGRN/wBmUf8AalT+AHBc/wB1Yv4Ae2n/AIRy/wCId/8Ai3v/AIGBfwCEhIIAiIeGAIiIhgCMjIoAlJSTAJ2cmwCkpKMAqainAKysqwCwsK8AtLSzALi4twC8vLoAl4f/AJmL/wChlP8Appn/AKic/wCxpv8As6n/AL+2/wDFvP8AxMTDAMnJxwDLy8oA0M/PANDQzwDW1tUA3NzbAMvF/wDPyf8A0cv/ANbQ/wDa1f8A3tr/AOLe/wDh4d4A4+PjAOnq4wDu7uoA5uL/AOnm/wDq6P8A7/DrAPHu/wDw8O8A8vPvAPDw7ADx8e0A8fHxAPLy8QD09PEA9fXxAPT18gD29vMA9fX0APX19QD29vUA9/f1APb29AD39/cA9fXzAPLx/wD19P8A9/j1APf49QD49/8A+Pf/APj49gD4+PYA+fn4APn6+AD6+vgA+vr5APr6+gD7+/oA+/v7APn5/wD8/PsA/Pz8APz9/AD9/fwA/f39AP38/wD9/f8A/v79AP7+/gD+/v8A/v/+AP///glZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZV/dXt7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3V/lZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZV1amFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhanWVlZWVlZWVlZWVlZWVlZWVlZWVlXVhYWFhYWJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJhYWFhYXWVlZWVlZWVlZWVlZWVlZWVlWJhYWFqf5WVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlX9qYWFhYpWVlZWVlZWVlZWVlZWVdWFhYXWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZV1YWFhdZWVlZWVlZWVlZWVdWFhYpWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZViYWF1lZWVlZWVlZWVlWFhapWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlWZhYZWVlZWVlZWVlWJhYpWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVYmFilZWVlZWVlXVhYZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZVhYXWVlZWVlZVhYXWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVdWFhlZWVlZV1YWGVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZVhYXWVlZWVamFqlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVRSBXlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVamFqlZWVlWFhf5WVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlRYAEVaVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlX9hYZWVlZVhYZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZVFCAARVpWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVYWGVlZV/YWGVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZViVh8BABFWlZWVlZWVlZWVlZVeWpWVlZWVlZWVlZWVlWJhf5WVdWFilZWVlZWVlZWVlZWVlZWVlZWVlZWVV0AYDQYEAQAAG5WVlZWVlZWVlZVaLSlalZWVlZWVlZWVlZViYXWVlXthYpWVlZWVlZWVlZWVlZWVlZWVlZVTHQgAAAAEBgEAATuVlZWVlZWVlZVaLSItXpWVlZWVlZWVlZWVYmF7lZV7YWKVlZWVlZWVlZWVlZWVlZWVlWEgBgABCRtARhgBAR91lZWVlZWVlZVaLSItWpWVlZWVlZWVlZWVlWJhe5WVe2FilZWVlZWVlZWVlZWVlZWVlVMRAAAPQGCVlT4BAR91lZWVlZWVlZVaLSItWpWVlZWVlZWVlZWVlZViYXuVlXthYpWVlZWVlZWVlZWVlZWVlUYJAAY8YpWVlZUaAR91lZWVlZWVlZVaLSItWpWVlZWVlZWVlZWVlZWVYmF7lZV7YWKVlZWVlZWVlZWVlZWVlUYIAA1GlZWVlZWVX0Z1lZWVlZWVlZVaLSItWpWVlZWVlZWVlZWVlZWVlWJhe5WVe2FilZWVlZWVlZWVlZWVlVYMAA9VlZWVlZWVZFBMSUlLUGSVlZVaLSItWpWVlZWVlZWVlZWVlZWVlZViYXuVlXthYpWVlZWVlZWVlZWVlWIWAAlTlZWVlZVcOCwjIiIiIiMtOV1ZLSItWpWVlZWVlZWVlZWVlZWVlZWVYmF7lZV7YWKVlZWVlZWVlZWVlZU/AQRFlZWVlXlKKiIiKTA0NDApIiIqKiItWpWVlZWVlZWVlZWVlZWVlZWVlWJhe5WVe2FilZWVlZWVlZWVlZVXCQAflZWVlXk3IyIvS115lZV5XUsvIiImUJWVlZWVlZWVlZWVlZWVlZWVlZViYXuVlXthYpWVlZWVlZWVlZWVPgAJV5WVlZU5IiM5ZZWVlZWVlZWVZDkjIzmVlZWVlZWVlZWVlZWVlZWVlZWVYmF7lZV7YWKVlZWVlZWVlZWVYg8AIJWVlZVNIyNIlZWVlZWVlZWVlZWVSSMjTZWVlZWVlZWVlZWVlZWVlZWVlWJhe5WVe2FilZWVlZWVlZWVlVEEBFGVlZVkLiI2fZWVlZWVlZWVlZWVlZU2Ii5klZWVlZWVlZWVlZWVlZWVlZViYXuVlXthYpWVlZWVlZWVlZU+ABBqlZWVTCIqXZWVlZWVlZWVlZWVlZWVXSoiTJWVlZWVlZWVlZWVlZWVlZWVYmF7lZV7YWKVlZWVlZWVlZWVGAAdlZWVlTMhN5WVlZWVlZWVlZWVlZWVlZU5IjmVlZWVlZWVlZWVlZWVlZWVlWJhe5WVe2FilZWVlZWVlZWVdREAP5WVlWMrI0+VlZWVlZWVlZWVlZWVlZWVZE5jlZWVlZWVlZWVlZWVlZWVlZViYXuVlXthYpWVlZWVlZWVlWINAUKVlZVaJihclZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVYmF7lZV7YWKVlZWVlZWVlZVhDAFElZWVWCUqY5WVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlWJhe5WVe2FilZWVlZWVlZWVYgwBQ5WVlVomKV6VlZWVlZWVlZWVlZWVlZViQx4WFx9FdZWVlZWVlZWVlZWVlZViYXuVlXthYpWVlZWVlZWVlWIPAECVlZVdKCVYlZWVlZWVlZWVlZWVlZVREgEAAAAAAxZTlZWVlZWVlZWVlZWVYmF7lZV7YWKVlZWVlZWVlZWVFgAglZWVeTAiSZWVlZWVlZWVlZWVlZVGCAAFFjogFQQADFOVlZWVlZWVlZWVlWJhe5WVe2FilZWVlZWVlZWVlSAAFXWVlZU5IjBnlZWVlZWVlZWVlZVXDQAPRpWVlXVFCQARYpWVlZWVlZWVlZViYXuVlXthYpWVlZWVlZWVlZVDAQhXlZWVWigjSpWVlZWVlZWVlZWVPQAIU5WVlZWVlUYGAUCVlZWVlZWVlZWVYmF7lZV7YWKVlZWVlZWVlZWVXwkAQJWVlZU5IilYlZWVlZWVlZWVdREAIJWVXlyVlZWVHQAWlZWVlZWVlZWVlWJhe5WVe2FilZWVlZWVlZWVlZUdABFilZWVZDAiK1CVlZWVlZWVlWAIAUaVWS0pTpWVlUEADWKVlZWVlZWVlZViYXuVlXthYpWVlZWVlZWVlZWVUQUBQJWVlZVbLiInOV2VlZWVlZVXCARSWi0iIihOlZVGAQtilZWVlZWVlZWVYmF7lZV7YWKVlZWVlZWVlZWVlZUdAAxXlZWVlVwxIiIqNUpOWpWVVwgEUzchLTAiKE6VRgEMYpWVlZWVlZWVlWJhe5WVe2FilZWVlZWVlZWVlZWVVgkAGGqVlZWVZ0otIyEiIixjlVcIBFNYN1pjMiIoUEYBDGKVlZWVlZWVlZViYXuVlXthYpWVlZWVlZWVlZWVlZVBBAEfdZWVlZWVZE43MS82Z5VXCARTlZWVlWMyI0pGAQxhlZWVlZWVlZWVYmF7lZV7YWKVlZWVlZWVlZWVlZWVlTsBAR1ilZWVlZWVlX15lZWVVwgEU5WVlZWVZE9nRgEMYZWVlZWVlZWVlWJhe5WVe2FilZWVlZWVlZWVlZWVlZV1IAEAFFOVlZWVlZWVlZWVlVcIBFGVlZWVlZWVlUUBDGGVlZWVlZWVlZViYXuVlXthYpWVlZWVlZWVlZWVlZWVlXU+BQAIO1eVlZWVlZWVlZVXBwEQH0FTYGBRQB4OAAlhlZWVlZWVlZWVYmF1lZV/YWGVlZWVlZWVlZWVlZWVlZWVlUUPAAAJH0VgdZWVlZWVYhEBAAAABAwJBAAAAAEWdZWVlZWVlZWVlWJhf5WVlWFhlZWVlZWVlZWVlZWVlZWVlZWVYDsJAAABCRMZHUB1lZVgRDsXDQUBAQYNGD5FYJWVlZWVlZWVlZVhYZWVlZVhYX+VlZWVlZWVlZWVlZWVlZWVlZWVVz8UBgEAAAAHV5WVlZWVlWJTQUNUYpWVlZWVlZWVlZWVlZV/YWGVlZWVamFqlZWVlZWVlZWVlZWVlZWVlZWVlZWVdVZDPh8cP3WVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVamFqlZWVlXVhYZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlWFhdZWVlZWVYWF1lZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlXVhYZWVlZWVlXVhYZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZVhYXWVlZWVlZWVYmFilZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZ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lpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpZuQkIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiJCQm6WlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWXiHp4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHqIm6WlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWIeHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eIilpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpZuIeHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHiIm6WlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWIeHh4eHh4eHh4eHh6gYiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIh6enh4eHh4eHh4eHh4iKWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWQeHh4eHh4eHh4iJClpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWQiHh4eHh4eHh4eJClpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWliHh4eHh4eHiBkKWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpZCIeHh4eHh4eIilpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpXp4eHh4eHiIpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWliHh4eHh4eHqlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaV4eHh4eHh6m6WlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlm3p4eHh4eHilpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWleHh4eHh4iKWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpYh4eHh4eHilpaWlpaWlpaWlpaWlpaWlpaWlpaWlpXh4eHh4eJClpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpZB4eHh4eHilpaWlpaWlpaWlpaWlpaWlpaWlpaV6eHh4eHibpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpZt4eHh4eHqlpaWlpaWlpaWlpaWlpaWlpaWliHh4eHh4paWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaV4eHh4eIilpaWlpaWlpaWlpaWlpaWlpZB4eHh4eJulpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpZt4eHh4eJClpaWlpaWlpaWlpaWlpaWleHh4eHiQpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpZB4eHh4eKWlpaWlpaWlpaWlpaWlpYh4eHh4iKWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpYh4eHh4iKWlpaWlpaWlpaWlpaWbeHh4eHqlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpXp4eHh4m6WlpaWlpaWlpaWlpYh4eHh4m6WlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlm3h4eHiIpaWlpaWlpaWlpaWleHh4eIilpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWliHh4eHilpaWlpaWlpaWlpYh4eHh4m6WlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWleHh4eIilpaWlpaWlpaWlenh4eIilpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWIeHh4eKWlpaWlpaWlpZt4eHh4kKWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaV0U2qlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpZB4eHh4m6WlpaWlpaWliHh4eHilpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlaREJC0qlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpXh4eHiIpaWlpaWlpaV6eHh4iKWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaVEAAAAB0qlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWliHh4eHqlpaWlpaWlpXh4eHiQpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpUUAAgIAB0qlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWQeHh4eKWlpaWlpaWbeHh4eKWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlahEAAgIAB0qlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaV4eHh4m6WlpaWlpZB4eHh4paWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlaBEAAgIAB0qlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpXh4eHiQpaWlpaWlkHh4eHqlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlaBQCAgIAB0qlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlenh4eJClpaWlpaWIeHh4gaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpZB6bFVMHgkBAgIAB0qlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpZlgWm+lpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaV6eHh4iKWlpaWlpYh4eHiIpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWldVNEGxILCQICAgICAgIACFOlpaWlpaWlpaWlpaWlpaWlpaWlpaWZQCkmL2+lpaWlpaWlpaWlpaWlpaWlpaWlpaWlpYh4eHiIpaWlpaWliHh4eIilpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaV6Ux4SCQAAAAAAAgICAgICAgIAQqWlpaWlpaWlpaWlpaWlpaWlpaWlmT8oJiYmWqWlpaWlpaWlpaWlpaWlpaWlpaWlpaWliHh4eIilpaWlpaWIeHh4iKWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaVsRhQJAAAAAgICAgAAAAICAgICAAJKpaWlpaWlpaWlpaWlpaWlpaWlpZk/KCYmJilgpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWIeHh4iKWlpaWlpYh4eHiIpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaV0RAwCAAACAgIAAAACBQgIAgICAgACH3qlpaWlpaWlpaWlpaWlpaWlpaWZPygmJiYoP5mlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpYh4eHiIpaWlpaWliHh4eIilpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWIShICAAICAgAAAggTHkZRVRkCAgIAAh96paWlpaWlpaWlpaWlpaWlpaWlmT8oJiYmKD+ZpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWliHh4eIilpaWlpaWIeHh4iKWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlaBoCAAICAgAACBlHaHqlpZAiAgACAAIfeqWlpaWlpaWlpaWlpaWlpaWlpZk/KCYmJig/maWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWIeHh4iKWlpaWlpYh4eHiIpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlkEwMAAACAgACDCRokKWlpaWQIgIAAgACH3qlpaWlpaWlpaWlpaWlpaWlpaWZPygmJiYoP5mlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpYh4eHiIpaWlpaWliHh4eIilpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpXojCQACAgAADERspaWlpaWlpUwCAAIAAh96paWlpaWlpaWlpaWlpaWlpaWlmT8oJiYmKD+ZpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWliHh4eIilpaWlpaWIeHh4iKWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaV1HAIAAgIACR5qpaWlpaWlpaWlQgACAQIfeqWlpaWlpaWlpaWlpaWlpaWlpZk/KCYmJig/maWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWIeHh4iKWlpaWlpYh4eHiIpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlbBYAAQIAABJOkKWlpaWlpaWlpaVRCQACH3qlpaWlpaWlpaWlpaWlpaWlpaWZPygmJiYoP5mlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpYh4eHiIpaWlpaWliHh4eIilpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpWwWAAICAAIbaqWlpaWlpaWlpaWlpZBOIkd6paWlpaWlpaWlpaWlpaWlpaWlmT8oJiYmKD+ZpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWliHh4eIilpaWlpaWIeHh4iKWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaV6GgACAgAFI3qlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpZk/KCYmJig/maWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWIeHh4iKWlpaWlpYh4eHiIpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlkB4CAgIACUSQpaWlpaWlpaWlpaWlpaWlpZmAf39/f4CZpaWlpaWlpaWlpaWZPygmJiYoP5mlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpYh4eHiIpaWlpaWliHh4eIilpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaVFAgACAAlFkKWlpaWlpaWlpaWlpaWZcV9ANzIwMDAxMjdAX3KZpaWlpaWlmT8oJiYmKD+ZpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWliHh4eIilpaWlpaWIeHh4iKWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlVQgAAgACRJClpaWlpaWlpaWlpaV/XTgtKCYmJiYmJiYmJiYoLjlfgKWlpZk/KCYmJig/maWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWIeHh4iKWlpaWlpYh4eHiIpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpXUUAAICAh6QpaWlpaWlpaWlpaWAXDIoJiYmJiYmJiYmJiYmJiYmJig1XZmZPygmJiYoP5mlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpYh4eHiIpaWlpaWliHh4eIilpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlJAICAgAVdaWlpaWlpaWlpaWlYzUoJiYmJiYmJiYnKCgnJiYmJiYmJiYoNzwoJiYmKD+ZpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWliHh4eIilpaWlpaWIeHh4iKWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpWUKAAIAC2WlpaWlpaWlpaWlmVcrJiYmJiYmKjI8VltdXVtWPDIqJiYmJiYmJiYmJig/maWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWIeHh4iKWlpaWlpYh4eHiIpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWQHAACAgJEpaWlpaWlpaWlpX87KCYmJiYmMEBjgKWlpaWlpaWlgGNAMCYmJiYmJiYoQJmlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpYh4eHiIpaWlpaWliHh4eIilpaWlpaWlpaWlpaWlpaWlpaWlpaWlpVUHAAIAFXilpaWlpaWlpaV/OCYmJiYmL1hzpaWlpaWlpaWlpaWlpaVzVy8mJiYmJi9ypaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWliHh4eIilpaWlpaWIeHh4iKWlpaWlpaWlpaWlpaWlpaWlpaWlpaWQHAACAAlOpaWlpaWlpaWlgDwmJiYmKDhwpaWlpaWlpaWlpaWlpaWlpaWlcDkoJiYmJzyApaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWIeHh4iKWlpaWlpYh4eHiIpaWlpaWlpaWlpaWlpaWlpaWlpaWlpWgIAAIAGHqlpaWlpaWlpaVAKCYmJipWmaWlpaWlpaWlpaWlpaWlpaWlpaWlmVYqJiYmJ0CZpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpYh4eHiIpaWlpaWliHh4eIilpaWlpaWlpaWlpaWlpaWlpaWlpaWlPQACAAVOpaWlpaWlpaWlXiomJiYqWKWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpVoqJiYmKl6lpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWliHh4eIilpaWlpaWIeHh4iKWlpaWlpaWlpaWlpaWlpaWlpaWlpXoRAAIAEXqlpaWlpaWlpXIxJiYmKFilpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpVgoJiYmMXKlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWIeHh4iKWlpaWlpYh4eHiIpaWlpaWlpaWlpaWlpaWlpaWlpaWlVQkAAgFEpaWlpaWlpaWlQCYmJiY+maWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlmT8mJiYmP6WlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpYh4eHiIpaWlpaWliHh4eIilpaWlpaWlpaWlpaWlpaWlpaWlpaUkAAIACGelpaWlpaWlpW8tJiYmMnOlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlfjImJiYtb6WlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWliHh4eIilpaWlpaWIeHh4iKWlpaWlpaWlpaWlpaWlpaWlpaWlehYAAgAVeqWlpaWlpaWlQCYmJilfpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlXygmJiZApaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWIeHh4iKWlpaWlpYh4eHiIpaWlpaWlpaWlpaWlpaWlpaWlpaVsCwACACSlpaWlpaWlpX4xJiYmNpmlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWZNiYmJjF+paWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpYh4eHiIpaWlpaWliHh4eIilpaWlpaWlpaWlpaWlpaWlpaWlpVMJAAACTaWlpaWlpaWlXygmJihepaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaVeKCYmKWOlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWliHh4eIilpaWlpaWIeHh4iKWlpaWlpaWlpaWlpaWlpaWlpaWlRwICAApqpaWlpaWlpaU/JiYmMX6lpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpX8yJiYvcqWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWIeHh4iKWlpaWlpYh4eHiIpaWlpaWlpaWlpaWlpaWlpaWlpaUiAAIAEnqlpaWlpaWlgDMmJiY7paWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpW05OGGlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpYh4eHiIpaWlpaWliHh4eIilpaWlpaWlpaWlpaWlpaWlpaWlkBsAAgAWiKWlpaWlpaVxLSYmJ1ulpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpZmZpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWliHh4eIilpaWlpaWIeHh4iKWlpaWlpaWlpaWlpaWlpaWlpaV6FgACAByQpaWlpaWlpWMqJiYqbaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWIeHh4iKWlpaWlpYh4eHiIpaWlpaWlpaWlpaWlpaWlpaWlpXoRAAIAIaWlpaWlpaWlXygmJi1xpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpYh4eHiIpaWlpaWliHh4eIilpaWlpaWlpaWlpaWlpaWlpaWlehEAAgAipaWlpaWlpaVeKCYmL3OlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWliHh4eIilpaWlpaWIeHh4iKWlpaWlpaWlpaWlpaWlpaWlpaV6EQACACKlpaWlpaWlpV4oJiYvc6WlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWIeHh4iKWlpaWlpYh4eHiIpaWlpaWlpaWlpaWlpaWlpaWlpXoRAAIAIqWlpaWlpaWlXygmJi9zpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpZBqTkdHR0lTbJClpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpYh4eHiIpaWlpaWliHh4eIilpaWlpaWlpaWlpaWlpaWlpaWlehQAAgAepaWlpaWlpaVhKSYmK3ClpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpXVIFgsFAgABAgkMG016paWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWliHh4eIilpaWlpaWIeHh4iKWlpaWlpaWlpaWlpaWlpaWlpaWIFgACABuQpaWlpaWlpW0qJiYpY6WlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpZBKEgIAAAACAgICAAAABRZTpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWIeHh4iKWlpaWlpYh4eHiIpaWlpaWlpaWlpaWlpaWlpaWlpZAcAAIAFXqlpaWlpaWlcy8mJiZZpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaVsHwQAAgICAAAAAAABAgIAAAc9iKWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpYh4eHiIpaWlpaWliHh4eIilpaWlpaWlpaWlpaWlpaWlpaWlpSQAAgAMdaWlpaWlpaWZNiYmJjiZpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlahYAAAICAAAFCwwMCAIAAAICAAIeeqWlpaWlpaWlpaWlpaWlpaWlpaWlpaWliHh4eIilpaWlpaWIeHh4iKWlpaWlpaWlpaWlpaWlpaWlpaWlSQICAAhopaWlpaWlpaVAJiYmLnGlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpXUYAAICAAAMIlFqdXRpTBwIAAICAAIikKWlpaWlpaWlpaWlpaWlpaWlpaWlpaWIeHh4iKWlpaWlpYh4eHiIpaWlpaWlpaWlpaWlpaWlpaWlpaVVCQACAkqlpaWlpaWlpWMqJiYnWaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWYIgICAgAFHmqlpaWlpaWlkGUYAgACAAVKpaWlpaWlpaWlpaWlpaWlpaWlpaWlpYh4eHiIpaWlpaWliHh4eIilpaWlpaWlpaWlpaWlpaWlpaWlpXUMAAIAIKWlpaWlpaWlgDUmJiYyfqWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpVMHAAIACUWQpaWlpaWlpaWlpXoeAgACAAxqpaWlpaWlpaWlpaWlpaWlpaWlpaWliHh4eIilpaWlpaWIeHh4iKWlpaWlpaWlpaWlpaWlpaWlpaWlkBkAAgASeqWlpaWlpaWlWScmJidYpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWQGQACAQJEm6WlpaWlpaWlpaWlpYgfAAICACSlpaWlpaWlpaWlpaWlpaWlpaWlpaWIeHh4iKWlpaWlpYh4eHiIpaWlpaWlpaWlpaWlpaWlpaWlpaWlRQICAAlTpaWlpaWlpaVzMSYmJi1upaWlpaWlpaWlpaWlpaWlpaWlpaWlpVUHAAIAGXqlpaWlpaWlpaWlpaWlpWsSAAIADnSlpaWlpaWlpaWlpaWlpaWlpaWlpYh4eHiIpaWlpaWliHh4eIilpaWlpaWlpaWlpaWlpaWlpaWlpaVmCAACACKlpaWlpaWlpaVaKCYmJjZ/paWlpaWlpaWlpaWlpaWlpaWlpaWlQgACAAlTpaWlpaWlpaWlpaWlpaWlpUUCAgACT6WlpaWlpaWlpaWlpaWlpaWlpaWliHh4eIilpaWlpaWIeHh4iKWlpaWlpaWlpaWlpaWlpaWlpaWlpYMWAAIADGylpaWlpaWlpYA2JiYmJjyEpaWlpaWlpaWlpaWlpaWlpaWlpZAWAAIAFXqlpaWlmWFdcqWlpaWlpaWlbAsAAgAipaWlpaWlpaWlpaWlpaWlpaWlpaWIeHh4iKWlpaWlpYh4eHiIpaWlpaWlpaWlpaWlpaWlpaWlpaWlpUcCAgICR6WlpaWlpaWlpW0tJiYmKDuApaWlpaWlpaWlpaWlpaWlpaWldQwAAgAkpaWlpZk/KScybqWlpaWlpaWQGAACABaIpaWlpaWlpaWlpaWlpaWlpaWlpYh4eHiIpaWlpaWliHh4eIilpaWlpaWlpaWlpaWlpaWlpaWlpaWlbAwAAgARdaWlpaWlpaWlpVsqJiYmKDhxpaWlpaWlpaWlpaWlpaWlpaVrCwACAkmlpaWZPygmJiYxbqWlpaWlpaUgAAIAEXqlpaWlpaWlpaWlpaWlpaWlpaWliHh4eIilpaWlpaWIeHh4iKWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlJQACAgJGpaWlpaWlpaWlpVYoJiYmJjFemaWlpaWlpaWlpaWlpaWlpWoKAAICTKWlmT8oJiYmJiYxb6WlpaWlpUQAAgAReqWlpaWlpaWlpaWlpaWlpaWlpaWIeHh4iKWlpaWlpYh4eHiIpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaVoCwACAAxqpaWlpaWlpaWlmVYoJiYmJik3YYSlpaWlpaWlpaWlpaWlagoAAAVOpZk/KCYmJiYmJiYxbqWlpaWlRQACABF6paWlpaWlpaWlpaWlpaWlpaWlpYh4eHiIpaWlpaWliHh4eIilpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaUkAQICAB6QpaWlpaWlpaWlmVorJiYmJiYqNVhtf5mlpaWlpaWlpaVqCgAABU6lbSomJiYoKiYmJiYxbqWlpaVFAAIAEXqlpaWlpaWlpaWlpaWlpaWlpaWliHh4eIilpaWlpaWIeHh4iKWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpWwOAAIACU2lpaWlpaWlpaWlpWIyJiYmJiYmJioxNjw7WHKlpaWlpWoKAAAFTqVjKSYmKEBhLyYmJiYxbqWlpUUAAgAReqWlpaWlpaWlpaWlpaWlpaWlpaWIeHh4iKWlpaWlpYh4eHiIpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpUoCAAIADGilpaWlpaWlpaWlpXNAKyYmJiYmJiYmJiYmNYClpaWlagoAAAVOpYA3KSxAmaVjLyYmJiYxb6WlRQACABF6paWlpaWlpaWlpaWlpaWlpaWlpYh4eHiIpaWlpaWliHh4eIilpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlkBsAAgIAFnWlpaWlpaWlpaWlpaVtOy0mJiYmJiYmJiYqb6WlpaVqCgAABU6lpYBjbZmlpaVjLyYmJiY1gKVFAAIAEXqlpaWlpaWlpaWlpaWlpaWlpaWliHh4eIilpaWlpaWIeHh4iKWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlag4AAgICHHqlpaWlpaWlpaWlpaWlcFg2LSgmJiYmJjJ/paWlpWoKAAAFTqWlpaWlpaWlpaVjLyYmJitxpUUAAgAReqWlpaWlpaWlpaWlpaWlpaWlpaWIeHh4iKWlpaWlpYh4eHiIpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlUAgAAgECHnqlpaWlpaWlpaWlpaWlpZlxX1g+OTg7baWlpaWlagoAAAVOpaWlpaWlpaWlpaVjLyYmNoClRQACABF6paWlpaWlpaWlpaWlpaWlpaWlpYh4eHiIpaWlpaWliHh4eIilpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlRQQAAgACH3ilpaWlpaWlpaWlpaWlpaWlpaWlmaWlpaWlpaVqCgAABU6lpaWlpaWlpaWlpaVuP0BxpaVFAAIAEXqlpaWlpaWlpaWlpaWlpaWlpaWliHh4eIilpaWlpaWIeHh4iKWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWQIgIAAgACGWqlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpWoKAAAFTqWlpaWlpaWlpaWlpaWlpaWlpUUAAgAReqWlpaWlpaWlpaWlpaWlpaWlpaWIeHh4iKWlpaWlpYh4eHiIpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWQIgIAAgIAElOlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlagoAAAVOpaWlpaWlpaWlpaWlpaWlpaWlRQACABF6paWlpaWlpaWlpaWlpaWlpaWlpYh4eHiIpaWlpaWliHh4eIilpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWQIgIAAgIACER1paWlpaWlpaWlpaWlpaWlpaWlpaWlpaVqCgAABU6lpaWlpaWlpaWlpaWlpaWlpaVEAAIAEXqlpaWlpaWlpaWlpaWlpaWlpaWliHh4eIilpaWlpaWIeHh4iKWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWQRAkAAgIAAhVOkKWlpaWlpaWlpaWlpaWlpaWlpaWlpWoKAAICFkVTbHqlpaWlpaWlpaWQempORBIAAgAReqWlpaWlpaWlpaWlpaWlpaWlpaWIeHh4iKWlpaWlpYh4eHiIpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWYTAsAAgICAAkbVZClpaWlpaWlpaWlpaWlpaWlpaWlagoAAgIAAAkLFR5IZHWQiHVTRh8RCgQAAAECABF6paWlpaWlpaWlpaWlpaWlpaWlpYh4eHiIpaWlpaWliHh4eIGlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlZRYCAAICAAAJGEt0paWlpaWlpaWlpaWlpaWlpaVsCwACAgICAAAAAAIJDBYWDAkCAAAAAAICAgIAFXqlpaWlpaWlpaWlpaWlpaWlpaWlgXh4eIilpaWlpaWQeHh4eqWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWleEQKAAACAgAAAgwfS2p6paWlpaWlpaWlpaWlpZAkCQAAAAAAAgICAgAAAAAAAAICAgIAAAAAAghKpaWlpaWlpaWlpaWlpaWlpaWlpaV6eHh4kKWlpaWlpZB4eHh4paWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpWUbCQAAAgIBAAACChQfREpOU1VqpaWlpaWlpZBVRR8SCgIAAAAAAgICAgICAAAAAAULFB5HZaWlpaWlpaWlpaWlpaWlpaWlpaWlpXh4eHiQpaWlpaWlm3h4eHilpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpZBRGAkAAAICAgIAAAAAAgQJCQtEkKWlpaWlpaWlkHpqTEIZDggCAAAAAAIIEhtEUWx6paWlpaWlpaWlpaWlpaWlpaWlpaWlpaWleHh4eJulpaWlpaWleHh4eJClpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWQVR8MAgAAAAICAgIAAAAAAAhopaWlpaWlpaWlpaWlpZB1Z0oiFhkkTGp6kKWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpZB4eHh4paWlpaWlpaV6eHh4iKWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpWtKGwwJAAAAAAAAAAAACGilpaWlpaWlpaWlpaWlpaWlpaWIkKWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWliHh4eHqlpaWlpaWlpYh4eHh4paWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWQbFNEGxEMCAkJCQchkKWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaV4eHh4iKWlpaWlpaWlm3h4eHiQpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWQenVqZVNTZZClpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlkHh4eHiXpaWlpaWlpaWleHh4eIilpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWIeHh4eKWlpaWlpaWlpaWIeHh4eKWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpXh4eHiIpaWlpaWlpaWlpaV4eHh4iKWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWIeHh4eKWlpaWlpaWlpaWlpYh4eHh4m6WlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlm3h4eHiIpaWlpaWlpaWlpaWlm3h4eHh6paWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaV6eHh4eJulpaWlpaWlpaWlpaWliHh4eHiQpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWliHh4eHiIpaWlpaWlpaWlpaWlpaWleHh4eHiQpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpZB4eHh4eKWlpaWlpaWlpaWlpaWlpaWQeHh4eHibpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWbeHh4eHiQpaWlpaWlpaWlpaWlpaWlpaWIeHh4eHilpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpXh4eHh4iKWlpaWlpaWlpaWlpaWlpaWlpaV6eHh4eHibpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpZt4eHh4eHqlpaWlpaWlpaWlpaWlpaWlpaWlpaV6eHh4eHiQpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWQeHh4eHh4paWlpaWlpaWlpaWlpaWlpaWlpaWlpaV4eHh4eHiQpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlkHh4eHh4eKWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaV6eHh4eHh6m6WlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlm3p4eHh4eHilpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaV6eHh4eHh4iKWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlm4h4eHh4eHh6paWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWIeHh4eHh4eIiQpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlkIh4eHh4eHh4iKWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWQeHh4eHh4eHh4iJClpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWQiHh4eHh4eHh4eJClpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWliHh4eHh4eHh4eHh4eoGIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIgXp4eHh4eHh4eHh4eIilpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlm4h4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eIibpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpZuIeHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eoilpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlm4h6eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh6iJulpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlm5CQiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIkJCbpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpiVBORw0KGgoAAAANSUhEUgAAAQAAAA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
      logo.svg: 
      site.webmanifest: ewogICJuYW1lIjogIlRydXN0ZWQgUHJvZmlsZSBBbmFseXplciIsCiAgInNob3J0X25hbWUiOiAiUkhUUEEiLAogICJpY29ucyI6IFsKICAgIHsKICAgICAgInNyYyI6ICIvYnJhbmRpbmcvYW5kcm9pZC1jaHJvbWUtMTkyeDE5Mi5wbmciLAogICAgICAic2l6ZXMiOiAiMTkyeDE5MiIsCiAgICAgICJ0eXBlIjogImltYWdlL3BuZyIKICAgIH0sCiAgICB7CiAgICAgICJzcmMiOiAiL2JyYW5kaW5nL2FuZHJvaWQtY2hyb21lLTUxMng1MTIucG5nIiwKICAgICAgInNpemVzIjogIjUxMng1MTIiLAogICAgICAidHlwZSI6ICJpbWFnZS9wbmciCiAgICB9CiAgXSwKICAidGhlbWVfY29sb3IiOiAiI2ZmZmZmZiIsCiAgImJhY2tncm91bmRfY29sb3IiOiAiI2ZmZmZmZiIsCiAgImRpc3BsYXkiOiAic3RhbmRhbG9uZSIKfQo=
      trustification_icon.svg: PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48c3ZnIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgd2lkdGg9IjM4IiBoZWlnaHQ9IjM4IiB2aWV3Qm94PSIwIDAgMzggMzgiPjxkZWZzPjxzdHlsZT4uZHtmaWxsOiNlMDA7fS5le2ZpbGw6I2ZmZjt9LmZ7ZmlsbDojZTBlMGUwO308L3N0eWxlPjwvZGVmcz48ZyBpZD0iYSI+PHJlY3QgY2xhc3M9ImUiIHg9IjEiIHk9IjEiIHdpZHRoPSIzNiIgaGVpZ2h0PSIzNiIgcng9IjkiIHJ5PSI5Ii8+PHBhdGggY2xhc3M9ImYiIGQ9Im0yOCwyLjI1YzQuMjczNCwwLDcuNzUsMy40NzY2LDcuNzUsNy43NXYxOGMwLDQuMjczNC0zLjQ3NjYsNy43NS03Ljc1LDcuNzVIMTBjLTQuMjczNCwwLTcuNzUtMy40NzY2LTcuNzUtNy43NVYxMGMwLTQuMjczNCwzLjQ3NjYtNy43NSw3Ljc1LTcuNzVoMThtMC0xLjI1SDEwQzUuMDI5NCwxLDEsNS4wMjk0LDEsMTB2MThjMCw0Ljk3MDYsNC4wMjk0LDksOSw5aDE4YzQuOTcwNiwwLDktNC4wMjk0LDktOVYxMGMwLTQuOTcwNi00LjAyOTQtOS05LTloMFoiLz48L2c+PGcgaWQ9ImIiPjxwYXRoIGNsYXNzPSJkIiBkPSJtMjguNDQyNCwyNy41NTgxbC00LjgxODUtNC44MTg1Yy43MTM1LS42OTQ2LDEuMjc3Ni0xLjU1MjcsMS42MjMyLTIuNTMxNi4xMTUyLS4zMjUyLS4wNTU3LS42ODIxLS4zODA5LS43OTc0LS4zMjIzLS4xMTYyLS42ODI2LjA1NTItLjc5NjkuMzgxMy0uNzU3OCwyLjE0MzEtMi43OTQ5LDMuNTgzLTUuMDY5MywzLjU4My0yLjk2MzksMC01LjM3NS0yLjQxMTEtNS4zNzUtNS4zNzVzMi40MTExLTUuMzc1LDUuMzc1LTUuMzc1Yy4zNDQ3LDAsLjYyNS0uMjc5OC42MjUtLjYyNXMtLjI4MDMtLjYyNS0uNjI1LS42MjVjLTMuNjUzMywwLTYuNjI1LDIuOTcyMi02LjYyNSw2LjYyNXMyLjk3MTcsNi42MjUsNi42MjUsNi42MjVjMS4zMjUxLDAsMi41Nzc3LS40MDc0LDMuNjM2Mi0xLjEwNDVsNC45MjE0LDQuOTIxNGMuMTIyMS4xMjIxLjI4MjIuMTgzMS40NDI0LjE4MzFzLjMyMDMtLjA2MS40NDI0LS4xODMxYy4yNDMyLS4yNDQxLjI0MzItLjYzOTYsMC0uODgzOFoiLz48cGF0aCBkPSJtMjAuNDQyNCwyNy41NTgxbC0yLTJjLS4yNDQxLS4yNDQxLS42NDA2LS4yNDQxLS44ODQ4LDAtLjI0MzIuMjQ0MS0uMjQzMi42Mzk2LDAsLjg4MzhsLjkwNjIuOTA1OWMtNC45MTkxLS4yODA0LTguODM4OC00LjM1OTQtOC44Mzg4LTkuMzQ3OCwwLTUuMTY5NCw0LjIwNjEtOS4zNzUsOS4zNzUtOS4zNzUuMzQ0NywwLC42MjUtLjI3OTguNjI1LS42MjVzLS4yODAzLS42MjUtLjYyNS0uNjI1Yy01Ljg1ODQsMC0xMC42MjUsNC43NjY2LTEwLjYyNSwxMC42MjUsMCw1LjY5NDksNC41MDc3LDEwLjM0NDUsMTAuMTQwNiwxMC42MDA1bC0uOTU3OS45NTc2Yy0uMjQzMi4yNDQxLS4yNDMyLjYzOTYsMCwuODgzOC4xMjIxLjEyMjEuMjgyMi4xODMxLjQ0MjQuMTgzMXMuMzIwMy0uMDYxLjQ0MjQtLjE4MzFsMi0yYy4yNDMyLS4yNDQxLjI0MzItLjYzOTYsMC0uODgzOFoiLz48cGF0aCBkPSJtMjUuNSwxNy42MjVjLTIuMjc0NCwwLTQuMTI1LTEuODUwNi00LjEyNS00LjEyNXYtNC4wMjg4YzAtLjI5NDkuMjA2MS0uNTQ5OC40OTUxLS42MTEzbDMuNS0uNzQ0MWMuMDg1OS0uMDE4Ni4xNzM4LS4wMTg2LjI1OTgsMGwzLjUuNzQ0MWMuMjg5MS4wNjEuNDk1MS4zMTY0LjQ5NTEuNjExM3Y0LjAyODhjMCwyLjI3NDQtMS44NTA2LDQuMTI1LTQuMTI1LDQuMTI1Wm0tMi44NzUtNy42NDc5djMuNTIyOWMwLDEuNTg1NCwxLjI5LDIuODc1LDIuODc1LDIuODc1czIuODc1LTEuMjg5NiwyLjg3NS0yLjg3NXYtMy41MjI5bC0yLjg3NS0uNjEwOC0yLjg3NS42MTA4WiIvPjxwYXRoIGNsYXNzPSJkIiBkPSJtMjUsMTQuMzUyMWMtLjE2MDIsMC0uMzIwMy0uMDYxLS40NDI0LS4xODMxbC0xLTFjLS4yNDMyLS4yNDQxLS4yNDMyLS42Mzk2LDAtLjg4MzguMjQ0MS0uMjQ0MS42NDA2LS4yNDQxLjg4NDgsMGwuNTU3Ni41NTgxLDEuNTU3Ni0xLjU1ODFjLjI0NDEtLjI0NDEuNjQwNi0uMjQ0MS44ODQ4LDAsLjI0MzIuMjQ0MS4yNDMyLjYzOTYsMCwuODgzOGwtMiwyYy0uMTIyMS4xMjIxLS4yODIyLjE4MzEtLjQ0MjQuMTgzMVoiLz48L2c+PC9zdmc+
  - kind: ConfigMap
    apiVersion: v1
    metadata:
      name: bombastic-api-auth
      labels:
        app.kubernetes.io/name: bombastic-api-auth
        app.kubernetes.io/component: bombastic
        app.kubernetes.io/instance: redhat-trusted-profile-analyzer
        app.kubernetes.io/version: 1.2.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: trusted-profile-analyzer
    data:
      auth.yaml: "\nauthentication:\n  clients:\n\n    - clientId: frontend\n    \
        \  issuerUrl: http://sso$APP_DOMAIN_URL/realms/chicken\n      scopeMappings:\
        \ &keycloakScopeMappings\n        \"create:document\": [ \"create.sbom\",\
        \ \"create.vex\" ]\n        \"read:document\": [ \"read.sbom\", \"read.vex\"\
        \ ]\n        \"update:document\": [ \"update.sbom\", \"update.vex\" ]\n  \
        \      \"delete:document\": [ \"delete.sbom\", \"delete.vex\" ]\n\n    - clientId:\
        \ walker\n      issuerUrl: http://sso$APP_DOMAIN_URL/realms/chicken\n    \
        \  scopeMappings: *keycloakScopeMappings\n"
  - kind: ConfigMap
    apiVersion: v1
    metadata:
      name: collector-osv-auth
      labels:
        app.kubernetes.io/name: collector-osv-auth
        app.kubernetes.io/component: collector
        app.kubernetes.io/instance: redhat-trusted-profile-analyzer
        app.kubernetes.io/version: 1.2.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: trusted-profile-analyzer
    data:
      auth.yaml: "\nauthentication:\n  clients:\n\n    - clientId: frontend\n    \
        \  issuerUrl: http://sso$APP_DOMAIN_URL/realms/chicken\n      scopeMappings:\
        \ &keycloakScopeMappings\n        \"create:document\": [ \"create.sbom\",\
        \ \"create.vex\" ]\n        \"read:document\": [ \"read.sbom\", \"read.vex\"\
        \ ]\n        \"update:document\": [ \"update.sbom\", \"update.vex\" ]\n  \
        \      \"delete:document\": [ \"delete.sbom\", \"delete.vex\" ]\n\n    - clientId:\
        \ walker\n      issuerUrl: http://sso$APP_DOMAIN_URL/realms/chicken\n    \
        \  scopeMappings: *keycloakScopeMappings\n"
  - kind: ConfigMap
    apiVersion: v1
    metadata:
      name: collectorist-api-auth
      labels:
        app.kubernetes.io/name: collectorist-api-auth
        app.kubernetes.io/component: collectorist
        app.kubernetes.io/instance: redhat-trusted-profile-analyzer
        app.kubernetes.io/version: 1.2.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: trusted-profile-analyzer
    data:
      auth.yaml: "\nauthentication:\n  clients:\n\n    - clientId: frontend\n    \
        \  issuerUrl: http://sso$APP_DOMAIN_URL/realms/chicken\n      scopeMappings:\
        \ &keycloakScopeMappings\n        \"create:document\": [ \"create.sbom\",\
        \ \"create.vex\" ]\n        \"read:document\": [ \"read.sbom\", \"read.vex\"\
        \ ]\n        \"update:document\": [ \"update.sbom\", \"update.vex\" ]\n  \
        \      \"delete:document\": [ \"delete.sbom\", \"delete.vex\" ]\n\n    - clientId:\
        \ walker\n      issuerUrl: http://sso$APP_DOMAIN_URL/realms/chicken\n    \
        \  scopeMappings: *keycloakScopeMappings\n"
  - kind: ConfigMap
    apiVersion: v1
    metadata:
      name: collectorist-api
      labels:
        app.kubernetes.io/name: collectorist-api
        app.kubernetes.io/component: collectorist
        app.kubernetes.io/instance: redhat-trusted-profile-analyzer
        app.kubernetes.io/version: 1.2.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: trusted-profile-analyzer
      annotations: null
    data:
      collectorist.yaml: "collectors:\n  osv:\n    cadence: 1d\n    url: http://collector-osv.trustification.svc.cluster.local/api/v1/\n\
        \    interests:\n      - package\n      - vulnerability"
  - kind: ConfigMap
    apiVersion: v1
    metadata:
      name: spog-api-auth
      labels:
        app.kubernetes.io/name: spog-api-auth
        app.kubernetes.io/component: spog
        app.kubernetes.io/instance: redhat-trusted-profile-analyzer
        app.kubernetes.io/version: 1.2.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: trusted-profile-analyzer
    data:
      auth.yaml: "\nauthentication:\n  clients:\n\n    - clientId: frontend\n    \
        \  issuerUrl: http://sso$APP_DOMAIN_URL/realms/chicken\n      scopeMappings:\
        \ &keycloakScopeMappings\n        \"create:document\": [ \"create.sbom\",\
        \ \"create.vex\" ]\n        \"read:document\": [ \"read.sbom\", \"read.vex\"\
        \ ]\n        \"update:document\": [ \"update.sbom\", \"update.vex\" ]\n  \
        \      \"delete:document\": [ \"delete.sbom\", \"delete.vex\" ]\n\n    - clientId:\
        \ walker\n      issuerUrl: http://sso$APP_DOMAIN_URL/realms/chicken\n    \
        \  scopeMappings: *keycloakScopeMappings\n"
  - kind: ConfigMap
    apiVersion: v1
    metadata:
      name: spog-ui-backend
      labels:
        app.kubernetes.io/name: spog-ui-backend
        app.kubernetes.io/component: spog
        app.kubernetes.io/instance: redhat-trusted-profile-analyzer
        app.kubernetes.io/version: 1.2.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: trusted-profile-analyzer
    data: null
  - kind: ConfigMap
    apiVersion: v1
    metadata:
      name: v11y-api-auth
      labels:
        app.kubernetes.io/name: v11y-api-auth
        app.kubernetes.io/component: v11y
        app.kubernetes.io/instance: redhat-trusted-profile-analyzer
        app.kubernetes.io/version: 1.2.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: trusted-profile-analyzer
    data:
      auth.yaml: "\nauthentication:\n  clients:\n\n    - clientId: frontend\n    \
        \  issuerUrl: http://sso$APP_DOMAIN_URL/realms/chicken\n      scopeMappings:\
        \ &keycloakScopeMappings\n        \"create:document\": [ \"create.sbom\",\
        \ \"create.vex\" ]\n        \"read:document\": [ \"read.sbom\", \"read.vex\"\
        \ ]\n        \"update:document\": [ \"update.sbom\", \"update.vex\" ]\n  \
        \      \"delete:document\": [ \"delete.sbom\", \"delete.vex\" ]\n\n    - clientId:\
        \ walker\n      issuerUrl: http://sso$APP_DOMAIN_URL/realms/chicken\n    \
        \  scopeMappings: *keycloakScopeMappings\n"
  - kind: ConfigMap
    apiVersion: v1
    metadata:
      name: vexination-api-auth
      labels:
        app.kubernetes.io/name: vexination-api-auth
        app.kubernetes.io/component: vexination
        app.kubernetes.io/instance: redhat-trusted-profile-analyzer
        app.kubernetes.io/version: 1.2.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: trusted-profile-analyzer
    data:
      auth.yaml: "\nauthentication:\n  clients:\n\n    - clientId: frontend\n    \
        \  issuerUrl: http://sso$APP_DOMAIN_URL/realms/chicken\n      scopeMappings:\
        \ &keycloakScopeMappings\n        \"create:document\": [ \"create.sbom\",\
        \ \"create.vex\" ]\n        \"read:document\": [ \"read.sbom\", \"read.vex\"\
        \ ]\n        \"update:document\": [ \"update.sbom\", \"update.vex\" ]\n  \
        \      \"delete:document\": [ \"delete.sbom\", \"delete.vex\" ]\n\n    - clientId:\
        \ walker\n      issuerUrl: http://sso$APP_DOMAIN_URL/realms/chicken\n    \
        \  scopeMappings: *keycloakScopeMappings\n"
  - kind: PersistentVolumeClaim
    apiVersion: v1
    metadata:
      name: collectorist-api
      labels:
        app.kubernetes.io/name: collectorist-api
        app.kubernetes.io/component: collectorist
        app.kubernetes.io/instance: redhat-trusted-profile-analyzer
        app.kubernetes.io/version: 1.2.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: trusted-profile-analyzer
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
  - kind: PersistentVolumeClaim
    apiVersion: v1
    metadata:
      name: user-preferences-db-path
      labels:
        app.kubernetes.io/name: user-preferences-db-path
        app.kubernetes.io/component: spog
        app.kubernetes.io/instance: redhat-trusted-profile-analyzer
        app.kubernetes.io/version: 1.2.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: trusted-profile-analyzer
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 10Mi
  - kind: PersistentVolumeClaim
    apiVersion: v1
    metadata:
      name: v11y-walker
      labels:
        app.kubernetes.io/name: v11y-walker
        app.kubernetes.io/component: v11y
        app.kubernetes.io/instance: redhat-trusted-profile-analyzer
        app.kubernetes.io/version: 1.2.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: trusted-profile-analyzer
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi
  - apiVersion: v1
    kind: Service
    metadata:
      name: bombastic-api
      labels:
        app.kubernetes.io/name: bombastic-api
        app.kubernetes.io/component: bombastic
        app.kubernetes.io/instance: redhat-trusted-profile-analyzer
        app.kubernetes.io/version: 1.2.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: trusted-profile-analyzer
      annotations: null
    spec:
      ports:
        - name: endpoint
          port: 80
          protocol: TCP
          targetPort: endpoint
      selector:
        app.kubernetes.io/name: bombastic-api
        app.kubernetes.io/component: bombastic
        app.kubernetes.io/instance: redhat-trusted-profile-analyzer
      type: ClusterIP
  - apiVersion: v1
    kind: Service
    metadata:
      name: collector-osv
      labels:
        app.kubernetes.io/name: collector-osv
        app.kubernetes.io/component: collector
        app.kubernetes.io/instance: redhat-trusted-profile-analyzer
        app.kubernetes.io/version: 1.2.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: trusted-profile-analyzer
      annotations: null
    spec:
      ports:
        - name: endpoint
          port: 80
          protocol: TCP
          targetPort: endpoint
      selector:
        app.kubernetes.io/name: collector-osv
        app.kubernetes.io/component: collector
        app.kubernetes.io/instance: redhat-trusted-profile-analyzer
      type: ClusterIP
  - apiVersion: v1
    kind: Service
    metadata:
      name: collectorist-api
      labels:
        app.kubernetes.io/name: collectorist-api
        app.kubernetes.io/component: collectorist
        app.kubernetes.io/instance: redhat-trusted-profile-analyzer
        app.kubernetes.io/version: 1.2.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: trusted-profile-analyzer
      annotations: null
    spec:
      ports:
        - name: endpoint
          port: 80
          protocol: TCP
          targetPort: endpoint
      selector:
        app.kubernetes.io/name: collectorist-api
        app.kubernetes.io/component: collectorist
        app.kubernetes.io/instance: redhat-trusted-profile-analyzer
      type: ClusterIP
  - apiVersion: v1
    kind: Service
    metadata:
      name: guac-collectsub
      labels:
        app.kubernetes.io/name: guac-collectsub
        app.kubernetes.io/component: guac
        app.kubernetes.io/instance: redhat-trusted-profile-analyzer
        app.kubernetes.io/version: 1.2.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: trusted-profile-analyzer
      annotations: null
    spec:
      ports:
        - name: endpoint
          port: 2782
          protocol: TCP
          targetPort: endpoint
      selector:
        app.kubernetes.io/name: guac-collectsub
        app.kubernetes.io/component: guac
        app.kubernetes.io/instance: redhat-trusted-profile-analyzer
      type: ClusterIP
  - apiVersion: v1
    kind: Service
    metadata:
      name: guac-graphql
      labels:
        app.kubernetes.io/name: guac-graphql
        app.kubernetes.io/component: guac
        app.kubernetes.io/instance: redhat-trusted-profile-analyzer
        app.kubernetes.io/version: 1.2.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: trusted-profile-analyzer
      annotations: null
    spec:
      ports:
        - name: endpoint
          port: 80
          protocol: TCP
          targetPort: endpoint
      selector:
        app.kubernetes.io/name: guac-graphql
        app.kubernetes.io/component: guac
        app.kubernetes.io/instance: redhat-trusted-profile-analyzer
      type: ClusterIP
  - apiVersion: v1
    kind: Service
    metadata:
      name: spog-api
      labels:
        app.kubernetes.io/name: spog-api
        app.kubernetes.io/component: spog
        app.kubernetes.io/instance: redhat-trusted-profile-analyzer
        app.kubernetes.io/version: 1.2.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: trusted-profile-analyzer
      annotations: null
    spec:
      ports:
        - name: endpoint
          port: 80
          protocol: TCP
          targetPort: endpoint
      selector:
        app.kubernetes.io/name: spog-api
        app.kubernetes.io/component: spog
        app.kubernetes.io/instance: redhat-trusted-profile-analyzer
      type: ClusterIP
  - apiVersion: v1
    kind: Service
    metadata:
      name: spog-ui
      labels:
        app.kubernetes.io/name: spog-ui
        app.kubernetes.io/component: spog
        app.kubernetes.io/instance: redhat-trusted-profile-analyzer
        app.kubernetes.io/version: 1.2.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: trusted-profile-analyzer
      annotations: null
    spec:
      ports:
        - name: endpoint
          port: 80
          protocol: TCP
          targetPort: endpoint
      selector:
        app.kubernetes.io/name: spog-ui
        app.kubernetes.io/component: spog
        app.kubernetes.io/instance: redhat-trusted-profile-analyzer
      type: ClusterIP
  - apiVersion: v1
    kind: Service
    metadata:
      name: v11y-api
      labels:
        app.kubernetes.io/name: v11y-api
        app.kubernetes.io/component: v11y
        app.kubernetes.io/instance: redhat-trusted-profile-analyzer
        app.kubernetes.io/version: 1.2.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: trusted-profile-analyzer
      annotations: null
    spec:
      ports:
        - name: endpoint
          port: 80
          protocol: TCP
          targetPort: endpoint
      selector:
        app.kubernetes.io/name: v11y-api
        app.kubernetes.io/component: v11y
        app.kubernetes.io/instance: redhat-trusted-profile-analyzer
      type: ClusterIP
  - apiVersion: v1
    kind: Service
    metadata:
      name: vexination-api
      labels:
        app.kubernetes.io/name: vexination-api
        app.kubernetes.io/component: vexination
        app.kubernetes.io/instance: redhat-trusted-profile-analyzer
        app.kubernetes.io/version: 1.2.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: trusted-profile-analyzer
      annotations: null
    spec:
      ports:
        - name: endpoint
          port: 80
          protocol: TCP
          targetPort: endpoint
      selector:
        app.kubernetes.io/name: vexination-api
        app.kubernetes.io/component: vexination
        app.kubernetes.io/instance: redhat-trusted-profile-analyzer
      type: ClusterIP
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: bombastic-api
      labels:
        app.kubernetes.io/name: bombastic-api
        app.kubernetes.io/component: bombastic
        app.kubernetes.io/instance: redhat-trusted-profile-analyzer
        app.kubernetes.io/version: 1.2.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: trusted-profile-analyzer
      annotations: null
    spec:
      replicas: 1
      selector:
        matchLabels:
          app.kubernetes.io/name: bombastic-api
          app.kubernetes.io/component: bombastic
          app.kubernetes.io/instance: redhat-trusted-profile-analyzer
      template:
        metadata:
          labels:
            app.kubernetes.io/name: bombastic-api
            app.kubernetes.io/component: bombastic
            app.kubernetes.io/instance: redhat-trusted-profile-analyzer
          annotations:
            configHash/auth: 772648c41c99afac20631c8f827cde6f9d9e3a7b828c8b754fba03c3fbdd1391
        spec:
          containers:
            - name: service
              image: registry.redhat.io/rhtpa/rhtpa-trustification-service-rhel9@sha256:e8c6b0b1d42cf780a827a91ecf4ac04f8b95c973062073c2a31ae1d38c59bb0c
              imagePullPolicy: IfNotPresent
              livenessProbe:
                initialDelaySeconds: 2
                httpGet:
                  path: /health/live
                  port: 9010
              readinessProbe:
                initialDelaySeconds: 2
                httpGet:
                  path: /health/ready
                  port: 9010
              command:
                - /trust
              args:
                - bombastic
                - api
                - -p
                - '8080'
                - --validator
                - sbom
                - --index-mode
                - file
                - --auth-configuration
                - /etc/config/auth.yaml
              env:
                - name: NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: RUST_LOG
                  value: info
                - name: INFRASTRUCTURE_ENABLED
                  value: 'true'
                - name: INFRASTRUCTURE_BIND
                  value: '[::]:9010'
                - name: HTTP_SERVER_BIND_ADDR
                  value: '::'
                - name: OIDC_PROVIDER_CLIENT_ID
                  value: walker
                - name: OIDC_PROVIDER_CLIENT_SECRET
                  value: 5460cc91-4e20-4edd-881c-b15b169f8a79
                - name: OIDC_PROVIDER_ISSUER_URL
                  value: http://sso$APP_DOMAIN_URL/realms/chicken
                - name: STORAGE_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      key: root-user
                      name: infrastructure-minio
                - name: STORAGE_SECRET_KEY
                  valueFrom:
                    secretKeyRef:
                      key: root-password
                      name: infrastructure-minio
                - name: STORAGE_ENDPOINT
                  value: http://infrastructure-minio:9000
                - name: STORAGE_REGION
                  value: eu-west-1
                - name: STORAGE_BUCKET
                  value: bombastic-default
                - name: SWAGGER_UI_OIDC_ISSUER_URL
                  value: http://sso$APP_DOMAIN_URL/realms/chicken
                - name: INDEX_SYNC_INTERVAL
                  value: 1m
              ports:
                - containerPort: 9010
                  protocol: TCP
                  name: infra
                - containerPort: 8080
                  name: endpoint
                  protocol: TCP
              volumeMounts:
                - name: config-auth
                  mountPath: /etc/config/auth.yaml
                  subPath: auth.yaml
          volumes:
            - name: config-auth
              configMap:
                name: bombastic-api-auth
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: bombastic-indexer
      labels:
        app.kubernetes.io/name: bombastic-indexer
        app.kubernetes.io/component: bombastic
        app.kubernetes.io/instance: redhat-trusted-profile-analyzer
        app.kubernetes.io/version: 1.2.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: trusted-profile-analyzer
      annotations: null
    spec:
      replicas: 1
      strategy:
        type: Recreate
      selector:
        matchLabels:
          app.kubernetes.io/name: bombastic-indexer
          app.kubernetes.io/component: bombastic
          app.kubernetes.io/instance: redhat-trusted-profile-analyzer
      template:
        metadata:
          labels:
            app.kubernetes.io/name: bombastic-indexer
            app.kubernetes.io/component: bombastic
            app.kubernetes.io/instance: redhat-trusted-profile-analyzer
        spec:
          volumes:
            - name: data
              emptyDir: {}
          containers:
            - name: service
              image: registry.redhat.io/rhtpa/rhtpa-trustification-service-rhel9@sha256:e8c6b0b1d42cf780a827a91ecf4ac04f8b95c973062073c2a31ae1d38c59bb0c
              imagePullPolicy: IfNotPresent
              livenessProbe:
                initialDelaySeconds: 2
                httpGet:
                  path: /health/live
                  port: 9010
              readinessProbe:
                initialDelaySeconds: 2
                httpGet:
                  path: /health/ready
                  port: 9010
              command:
                - /trust
              args:
                - bombastic
                - indexer
                - --stored-topic
                - bombastic-stored-default
                - --indexed-topic
                - bombastic-indexed-default
                - --failed-topic
                - bombastic-failed-default
                - --index-mode
                - file
                - --index-dir
                - /data/index
              env:
                - name: RUST_LOG
                  value: info
                - name: INFRASTRUCTURE_ENABLED
                  value: 'true'
                - name: INFRASTRUCTURE_BIND
                  value: '[::]:9010'
                - name: STORAGE_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      key: root-user
                      name: infrastructure-minio
                - name: STORAGE_SECRET_KEY
                  valueFrom:
                    secretKeyRef:
                      key: root-password
                      name: infrastructure-minio
                - name: STORAGE_ENDPOINT
                  value: http://infrastructure-minio:9000
                - name: STORAGE_REGION
                  value: eu-west-1
                - name: STORAGE_BUCKET
                  value: bombastic-default
                - name: EVENT_BUS
                  value: kafka
                - name: KAFKA_BOOTSTRAP_SERVERS
                  value: my-cluster-kafka-bootstrap:9092
                - name: KAFKA_PROPERTIES_ENV_PREFIX
                  value: TCK_
                - name: TCK_SECURITY__PROTOCOL
                  value: SASL_PLAINTEXT
                - name: TCK_SASL__USERNAME
                  value: user1
                - name: TCK_SASL__PASSWORD
                  valueFrom:
                    secretKeyRef:
                      key: password
                      name: user1
                - name: TCK_SASL__MECHANISM
                  value: SCRAM-SHA-512
                - name: INDEX_WRITER_MEMORY_BYTES
                  value: 128MiB
                - name: INDEX_SYNC_INTERVAL
                  value: 1m
              volumeMounts:
                - name: data
                  mountPath: /data
              ports:
                - containerPort: 9010
                  protocol: TCP
                  name: infra
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: collector-osv
      labels:
        app.kubernetes.io/name: collector-osv
        app.kubernetes.io/component: collector
        app.kubernetes.io/instance: redhat-trusted-profile-analyzer
        app.kubernetes.io/version: 1.2.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: trusted-profile-analyzer
      annotations: null
    spec:
      replicas: 1
      selector:
        matchLabels:
          app.kubernetes.io/name: collector-osv
          app.kubernetes.io/component: collector
          app.kubernetes.io/instance: redhat-trusted-profile-analyzer
      template:
        metadata:
          labels:
            app.kubernetes.io/name: collector-osv
            app.kubernetes.io/component: collector
            app.kubernetes.io/instance: redhat-trusted-profile-analyzer
          annotations:
            configHash/auth: 77d2d9a3c93e6821ed652357ff679a70c433ad06c22ecc2ab1c4b89f4b683bbb
        spec:
          containers:
            - name: service
              image: registry.redhat.io/rhtpa/rhtpa-trustification-service-rhel9@sha256:e8c6b0b1d42cf780a827a91ecf4ac04f8b95c973062073c2a31ae1d38c59bb0c
              imagePullPolicy: IfNotPresent
              livenessProbe:
                initialDelaySeconds: 2
                httpGet:
                  path: /health/live
                  port: 9010
              readinessProbe:
                initialDelaySeconds: 2
                httpGet:
                  path: /health/ready
                  port: 9010
              command:
                - /trust
              args:
                - collector
                - osv
                - -p
                - '8080'
                - --auth-configuration
                - /etc/config/auth.yaml
                - --v11y-url
                - http://v11y-api.trustification.svc.cluster.local
                - --guac-url
                - http://guac-graphql.trustification.svc.cluster.local/query
              env:
                - name: NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: RUST_LOG
                  value: info
                - name: INFRASTRUCTURE_ENABLED
                  value: 'true'
                - name: INFRASTRUCTURE_BIND
                  value: '[::]:9010'
                - name: HTTP_SERVER_BIND_ADDR
                  value: '::'
                - name: OIDC_PROVIDER_CLIENT_ID
                  value: walker
                - name: OIDC_PROVIDER_CLIENT_SECRET
                  value: 5460cc91-4e20-4edd-881c-b15b169f8a79
                - name: OIDC_PROVIDER_ISSUER_URL
                  value: http://sso$APP_DOMAIN_URL/realms/chicken
              volumeMounts:
                - name: guac-config
                  mountPath: /guac
                  readOnly: true
                - name: config-auth
                  mountPath: /etc/config/auth.yaml
                  subPath: auth.yaml
              ports:
                - containerPort: 9010
                  protocol: TCP
                  name: infra
                - containerPort: 8080
                  name: endpoint
                  protocol: TCP
          volumes:
            - name: guac-config
              configMap:
                name: collectorist-api
            - name: config-auth
              configMap:
                name: collector-osv-auth
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: collectorist-api
      labels:
        app.kubernetes.io/name: collectorist-api
        app.kubernetes.io/component: collectorist
        app.kubernetes.io/instance: redhat-trusted-profile-analyzer
        app.kubernetes.io/version: 1.2.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: trusted-profile-analyzer
      annotations: null
    spec:
      replicas: 1
      selector:
        matchLabels:
          app.kubernetes.io/name: collectorist-api
          app.kubernetes.io/component: collectorist
          app.kubernetes.io/instance: redhat-trusted-profile-analyzer
      template:
        metadata:
          labels:
            app.kubernetes.io/name: collectorist-api
            app.kubernetes.io/component: collectorist
            app.kubernetes.io/instance: redhat-trusted-profile-analyzer
          annotations:
            configHash/api: 77d2d9a3c93e6821ed652357ff679a70c433ad06c22ecc2ab1c4b89f4b683bbb
            configHash/auth: 6e31efd0ce835b8172b2991d4c80e8596a051e4a198dfeebb3fb1d22abae133a
        spec:
          containers:
            - name: service
              image: registry.redhat.io/rhtpa/rhtpa-trustification-service-rhel9@sha256:e8c6b0b1d42cf780a827a91ecf4ac04f8b95c973062073c2a31ae1d38c59bb0c
              imagePullPolicy: IfNotPresent
              livenessProbe:
                initialDelaySeconds: 2
                httpGet:
                  path: /health/live
                  port: 9010
              readinessProbe:
                initialDelaySeconds: 2
                httpGet:
                  path: /health/ready
                  port: 9010
              command:
                - /trust
              args:
                - collectorist
                - api
                - -p
                - '8080'
                - --csub-url
                - http://guac-collectsub.trustification.svc.cluster.local:2782
                - --auth-configuration
                - /etc/config/auth.yaml
                - --storage-base
                - /data
                - --collector-config
                - /config/collectorist.yaml
              env:
                - name: NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: RUST_LOG
                  value: info
                - name: INFRASTRUCTURE_ENABLED
                  value: 'true'
                - name: INFRASTRUCTURE_BIND
                  value: '[::]:9010'
                - name: HTTP_SERVER_BIND_ADDR
                  value: '::'
                - name: OIDC_PROVIDER_CLIENT_ID
                  value: walker
                - name: OIDC_PROVIDER_CLIENT_SECRET
                  value: 5460cc91-4e20-4edd-881c-b15b169f8a79
                - name: OIDC_PROVIDER_ISSUER_URL
                  value: http://sso$APP_DOMAIN_URL/realms/chicken
              ports:
                - containerPort: 9010
                  protocol: TCP
                  name: infra
                - containerPort: 8080
                  name: endpoint
                  protocol: TCP
              volumeMounts:
                - name: data
                  mountPath: /data
                - name: config
                  mountPath: /config
                  readOnly: true
                - name: config-auth
                  mountPath: /etc/config/auth.yaml
                  subPath: auth.yaml
          volumes:
            - name: config-auth
              configMap:
                name: collectorist-api-auth
            - name: data
              persistentVolumeClaim:
                claimName: collectorist-api
            - name: config
              configMap:
                name: collectorist-api
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: bombastic-collector
      labels:
        app.kubernetes.io/name: bombastic-collector
        app.kubernetes.io/component: guac
        app.kubernetes.io/instance: redhat-trusted-profile-analyzer
        app.kubernetes.io/version: 1.2.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: trusted-profile-analyzer
      annotations: null
    spec:
      replicas: 1
      strategy:
        type: Recreate
      selector:
        matchLabels:
          app.kubernetes.io/name: bombastic-collector
          app.kubernetes.io/component: guac
          app.kubernetes.io/instance: redhat-trusted-profile-analyzer
      template:
        metadata:
          labels:
            app.kubernetes.io/name: bombastic-collector
            app.kubernetes.io/component: guac
            app.kubernetes.io/instance: redhat-trusted-profile-analyzer
        spec:
          containers:
            - name: service
              image: registry.redhat.io/rhtpa/rhtpa-guac-rhel9@sha256:d5b83ecd6f59807eb40faabfc60b4d452971ba18c1a0e5fbd7f49d82a9361529
              imagePullPolicy: IfNotPresent
              command:
                - /opt/guac/guacone
              args:
                - collect
                - s3
                - --poll
              env:
                - name: STORAGE_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      key: root-user
                      name: infrastructure-minio
                - name: STORAGE_SECRET_KEY
                  valueFrom:
                    secretKeyRef:
                      key: root-password
                      name: infrastructure-minio
                - name: GUAC_S3_URL
                  value: http://infrastructure-minio:9000
                - name: GUAC_S3_BUCKET
                  value: bombastic-default
                - name: GUAC_S3_MP
                  value: kafka
                - name: GUAC_S3_MP_ENDPOINT
                  value: my-cluster-kafka-bootstrap:9092
                - name: KAFKA_PROPERTIES_ENV_PREFIX
                  value: TCK_
                - name: TCK_SECURITY__PROTOCOL
                  value: SASL_PLAINTEXT
                - name: TCK_SASL__USERNAME
                  value: user1
                - name: TCK_SASL__PASSWORD
                  valueFrom:
                    secretKeyRef:
                      key: password
                      name: user1
                - name: TCK_SASL__MECHANISM
                  value: SCRAM-SHA-512
                - name: GUAC_S3_QUEUES
                  value: bombastic-indexed-default
                - name: GUAC_GQL_ADDR
                  value: http://guac-graphql.trustification.svc.cluster.local/query
                - name: GUAC_CSUB_ADDR
                  value: guac-collectsub.trustification.svc.cluster.local:2782
              volumeMounts: null
          volumes: null
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: guac-collectsub
      labels:
        app.kubernetes.io/name: guac-collectsub
        app.kubernetes.io/component: guac
        app.kubernetes.io/instance: redhat-trusted-profile-analyzer
        app.kubernetes.io/version: 1.2.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: trusted-profile-analyzer
      annotations: null
    spec:
      replicas: 1
      strategy:
        type: Recreate
      selector:
        matchLabels:
          app.kubernetes.io/name: guac-collectsub
          app.kubernetes.io/component: guac
          app.kubernetes.io/instance: redhat-trusted-profile-analyzer
      template:
        metadata:
          labels:
            app.kubernetes.io/name: guac-collectsub
            app.kubernetes.io/component: guac
            app.kubernetes.io/instance: redhat-trusted-profile-analyzer
        spec:
          volumes: null
          containers:
            - name: service
              image: registry.redhat.io/rhtpa/rhtpa-guac-rhel9@sha256:d5b83ecd6f59807eb40faabfc60b4d452971ba18c1a0e5fbd7f49d82a9361529
              imagePullPolicy: IfNotPresent
              command:
                - /opt/guac/guaccsub
              args: []
              env: null
              volumeMounts: null
              livenessProbe:
                tcpSocket:
                  port: 2782
              ports:
                - containerPort: 2782
                  protocol: TCP
                  name: endpoint
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: guac-graphql
      labels:
        app.kubernetes.io/name: guac-graphql
        app.kubernetes.io/component: guac
        app.kubernetes.io/instance: redhat-trusted-profile-analyzer
        app.kubernetes.io/version: 1.2.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: trusted-profile-analyzer
      annotations: null
    spec:
      replicas: 1
      selector:
        matchLabels:
          app.kubernetes.io/name: guac-graphql
          app.kubernetes.io/component: guac
          app.kubernetes.io/instance: redhat-trusted-profile-analyzer
      template:
        metadata:
          labels:
            app.kubernetes.io/name: guac-graphql
            app.kubernetes.io/component: guac
            app.kubernetes.io/instance: redhat-trusted-profile-analyzer
        spec:
          initContainers:
            - name: migrate
              image: registry.redhat.io/rhtpa/rhtpa-guac-rhel9@sha256:d5b83ecd6f59807eb40faabfc60b4d452971ba18c1a0e5fbd7f49d82a9361529
              imagePullPolicy: IfNotPresent
              command:
                - /bin/sh
              args:
                - -ec
                - 'TC_PGOPTIONS="?"

                  TC_PGOPTIONS="${TC_PGOPTIONS}sslmode=${TC_PGSSLMODE}&"

                  exec /opt/guac/guacmigrate "--db-address" "postgres://${TC_PGUSER}:${TC_PGPASSWORD}@${TC_PGHOST}:${TC_PGPORT}/${TC_PGDATABASE}${TC_PGOPTIONS}"
                  "--db-driver" "postgres" "--db-debug" "true"

                  '
              env:
                - name: TC_PGHOST
                  valueFrom:
                    secretKeyRef:
                      key: POSTGRES_HOST
                      name: keycloak-db-secret
                - name: TC_PGPORT
                  value: '5432'
                - name: TC_PGDATABASE
                  value: guac
                - name: TC_PGUSER
                  value: postgres
                - name: TC_PGPASSWORD
                  value: postgres
                - name: TC_PGSSLMODE
                  value: disable
              volumeMounts: null
          containers:
            - name: service
              image: registry.redhat.io/rhtpa/rhtpa-guac-rhel9@sha256:d5b83ecd6f59807eb40faabfc60b4d452971ba18c1a0e5fbd7f49d82a9361529
              imagePullPolicy: IfNotPresent
              command:
                - /bin/sh
              args:
                - -ec
                - 'TC_PGOPTIONS="?"

                  TC_PGOPTIONS="${TC_PGOPTIONS}sslmode=${TC_PGSSLMODE}&"

                  exec /opt/guac/guacgql "--gql-backend" "ent" "--db-address" "postgres://${TC_PGUSER}:${TC_PGPASSWORD}@${TC_PGHOST}:${TC_PGPORT}/${TC_PGDATABASE}${TC_PGOPTIONS}"
                  "--db-driver" "postgres" "--db-migrate=false"

                  '
              workingDir: /guac
              env:
                - name: TC_PGHOST
                  value: keycloak-postgresql
                - name: TC_PGPORT
                  value: '5432'
                - name: TC_PGDATABASE
                  value: guac
                - name: TC_PGUSER
                  value: guac
                - name: TC_PGPASSWORD
                  value: guac1234
                - name: TC_PGSSLMODE
                  value: disable
                - name: GUAC_PROMETHEUS_ADDR
                  value: '9010'
              volumeMounts: null
              readinessProbe:
                httpGet:
                  path: /healthz
                  port: 8080
                  scheme: HTTP
              ports:
                - containerPort: 9010
                  protocol: TCP
                  name: infra
                - containerPort: 8080
                  protocol: TCP
                  name: endpoint
          volumes: null
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: vexination-collector
      labels:
        app.kubernetes.io/name: vexination-collector
        app.kubernetes.io/component: guac
        app.kubernetes.io/instance: redhat-trusted-profile-analyzer
        app.kubernetes.io/version: 1.2.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: trusted-profile-analyzer
      annotations: null
    spec:
      replicas: 1
      strategy:
        type: Recreate
      selector:
        matchLabels:
          app.kubernetes.io/name: vexination-collector
          app.kubernetes.io/component: guac
          app.kubernetes.io/instance: redhat-trusted-profile-analyzer
      template:
        metadata:
          labels:
            app.kubernetes.io/name: vexination-collector
            app.kubernetes.io/component: guac
            app.kubernetes.io/instance: redhat-trusted-profile-analyzer
        spec:
          containers:
            - name: service
              image: registry.redhat.io/rhtpa/rhtpa-guac-rhel9@sha256:d5b83ecd6f59807eb40faabfc60b4d452971ba18c1a0e5fbd7f49d82a9361529
              imagePullPolicy: IfNotPresent
              command:
                - /opt/guac/guacone
              args:
                - collect
                - s3
                - --poll
              env:
                - name: STORAGE_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      key: root-user
                      name: infrastructure-minio
                - name: STORAGE_SECRET_KEY
                  valueFrom:
                    secretKeyRef:
                      key: root-password
                      name: infrastructure-minio
                - name: GUAC_S3_URL
                  value: http://infrastructure-minio:9000
                - name: GUAC_S3_BUCKET
                  value: vexination-default
                - name: GUAC_S3_MP
                  value: kafka
                - name: GUAC_S3_MP_ENDPOINT
                  value: my-cluster-kafka-bootstrap:9092
                - name: KAFKA_PROPERTIES_ENV_PREFIX
                  value: TCK_
                - name: TCK_SECURITY__PROTOCOL
                  value: SASL_PLAINTEXT
                - name: TCK_SASL__USERNAME
                  value: user1
                - name: TCK_SASL__PASSWORD
                  valueFrom:
                    secretKeyRef:
                      key: password
                      name: user1
                - name: TCK_SASL__MECHANISM
                  value: SCRAM-SHA-512
                - name: GUAC_S3_QUEUES
                  value: vexination-indexed-default
                - name: GUAC_GQL_ADDR
                  value: http://guac-graphql.trustification.svc.cluster.local/query
                - name: GUAC_CSUB_ADDR
                  value: guac-collectsub.trustification.svc.cluster.local:2782
              volumeMounts: null
          volumes: null
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: spog-api
      labels:
        app.kubernetes.io/name: spog-api
        app.kubernetes.io/component: spog
        app.kubernetes.io/instance: redhat-trusted-profile-analyzer
        app.kubernetes.io/version: 1.2.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: trusted-profile-analyzer
      annotations: null
    spec:
      replicas: 1
      selector:
        matchLabels:
          app.kubernetes.io/name: spog-api
          app.kubernetes.io/component: spog
          app.kubernetes.io/instance: redhat-trusted-profile-analyzer
      template:
        metadata:
          labels:
            app.kubernetes.io/name: spog-api
            app.kubernetes.io/component: spog
            app.kubernetes.io/instance: redhat-trusted-profile-analyzer
          annotations:
            configHash/auth: 772648c41c99afac20631c8f827cde6f9d9e3a7b828c8b754fba03c3fbdd1391
            configHash/ui: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
        spec:
          containers:
            - name: service
              image: registry.redhat.io/rhtpa/rhtpa-trustification-service-rhel9@sha256:e8c6b0b1d42cf780a827a91ecf4ac04f8b95c973062073c2a31ae1d38c59bb0c
              imagePullPolicy: IfNotPresent
              livenessProbe:
                initialDelaySeconds: 2
                httpGet:
                  path: /health/live
                  port: 9010
              readinessProbe:
                initialDelaySeconds: 2
                httpGet:
                  path: /health/ready
                  port: 9010
              command:
                - /trust
              args:
                - spog
                - api
                - -p
                - '8080'
                - --db-storage-base
                - /data/db/
                - --bombastic-url
                - http://bombastic-api.trustification.svc.cluster.local
                - --vexination-url
                - http://vexination-api.trustification.svc.cluster.local
                - --collectorist-url
                - http://collectorist-api.trustification.svc.cluster.local
                - --v11y-url
                - http://v11y-api.trustification.svc.cluster.local
                - --exhort-url
                - http://exhort-api.trustification.svc.cluster.local
                - --crda-url
                - https://rhda.rhcloud.com/api/v4/analysis
                - --guac
                - http://guac-graphql.trustification.svc.cluster.local/query
                - --auth-configuration
                - /etc/config/auth.yaml
              env:
                - name: NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: RUST_LOG
                  value: info
                - name: INFRASTRUCTURE_ENABLED
                  value: 'true'
                - name: INFRASTRUCTURE_BIND
                  value: '[::]:9010'
                - name: HTTP_SERVER_BIND_ADDR
                  value: '::'
                - name: OIDC_PROVIDER_CLIENT_ID
                  value: walker
                - name: OIDC_PROVIDER_CLIENT_SECRET
                  value: 5460cc91-4e20-4edd-881c-b15b169f8a79
                - name: OIDC_PROVIDER_ISSUER_URL
                  value: http://sso$APP_DOMAIN_URL/realms/chicken
                - name: SWAGGER_UI_OIDC_ISSUER_URL
                  value: http://sso$APP_DOMAIN_URL/realms/chicken
                - name: SPOG_UI_CONFIG
                  value: /etc/config/spog-ui.yaml
              ports:
                - containerPort: 9010
                  protocol: TCP
                  name: infra
                - containerPort: 8080
                  name: endpoint
                  protocol: TCP
              volumeMounts:
                - name: config-auth
                  mountPath: /etc/config/auth.yaml
                  subPath: auth.yaml
                - name: user-preferences-db-path
                  mountPath: /data/db/
                - name: config-ui
                  mountPath: /etc/config/spog-ui.yaml
                  subPath: spog-ui.yaml
          volumes:
            - name: config-auth
              configMap:
                name: spog-api-auth
            - name: config-ui
              configMap:
                name: spog-ui-config
            - name: user-preferences-db-path
              persistentVolumeClaim:
                claimName: user-preferences-db-path
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: spog-ui
      labels:
        app.kubernetes.io/name: spog-ui
        app.kubernetes.io/component: spog
        app.kubernetes.io/instance: redhat-trusted-profile-analyzer
        app.kubernetes.io/version: 1.2.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: trusted-profile-analyzer
      annotations: null
    spec:
      replicas: 1
      selector:
        matchLabels:
          app.kubernetes.io/name: spog-ui
          app.kubernetes.io/component: spog
          app.kubernetes.io/instance: redhat-trusted-profile-analyzer
      template:
        metadata:
          annotations:
            configHash/backend: b0c2a2042c705c5a39c3901b8eb5d02c498a1035b24e922113341a8e7ce25b13
          labels:
            app.kubernetes.io/name: spog-ui
            app.kubernetes.io/component: spog
            app.kubernetes.io/instance: redhat-trusted-profile-analyzer
        spec:
          volumes:
            - name: endpoints
              emptyDir: {}
            - name: run
              emptyDir: {}
            - name: config
              configMap:
                optional: true
                name: spog-ui-backend
            - name: branding
              configMap:
                name: spog-ui-branding
          containers:
            - name: service
              image: registry.redhat.io/rhtpa/rhtpa-trustification-service-rhel9@sha256:e8c6b0b1d42cf780a827a91ecf4ac04f8b95c973062073c2a31ae1d38c59bb0c
              imagePullPolicy: IfNotPresent
              resources:
                limits:
                  memory: 64Mi
                requests:
                  memory: 64Mi
              command:
                - /nginx.sh
              env:
                - name: API_URL
                  value: http://api$APP_DOMAIN_URL
                - name: BOMBASTIC_URL
                  value: http://sbom$APP_DOMAIN_URL
                - name: VEXINATION_URL
                  value: http://vex$APP_DOMAIN_URL
                - name: ISSUER_URL
                  value: http://sso$APP_DOMAIN_URL/realms/chicken
                - name: CLIENT_ID
                  value: frontend
                - name: BACKEND_JSON_FILE
                  value: /etc/config/backend.json
              volumeMounts:
                - name: config
                  mountPath: /etc/config
                  readOnly: true
                - name: endpoints
                  mountPath: /endpoints
                - name: run
                  mountPath: /run
                - name: branding
                  mountPath: /public/branding
              ports:
                - containerPort: 8080
                  name: endpoint
                  protocol: TCP
              livenessProbe:
                httpGet:
                  path: /
                  port: 8080
                initialDelaySeconds: 2
              readinessProbe:
                httpGet:
                  path: /
                  port: 8080
                initialDelaySeconds: 2
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: v11y-api
      labels:
        app.kubernetes.io/name: v11y-api
        app.kubernetes.io/component: v11y
        app.kubernetes.io/instance: redhat-trusted-profile-analyzer
        app.kubernetes.io/version: 1.2.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: trusted-profile-analyzer
      annotations: null
    spec:
      replicas: 1
      selector:
        matchLabels:
          app.kubernetes.io/name: v11y-api
          app.kubernetes.io/component: v11y
          app.kubernetes.io/instance: redhat-trusted-profile-analyzer
      template:
        metadata:
          labels:
            app.kubernetes.io/name: v11y-api
            app.kubernetes.io/component: v11y
            app.kubernetes.io/instance: redhat-trusted-profile-analyzer
          annotations:
            configHash/auth: 772648c41c99afac20631c8f827cde6f9d9e3a7b828c8b754fba03c3fbdd1391
        spec:
          containers:
            - name: service
              image: registry.redhat.io/rhtpa/rhtpa-trustification-service-rhel9@sha256:e8c6b0b1d42cf780a827a91ecf4ac04f8b95c973062073c2a31ae1d38c59bb0c
              imagePullPolicy: IfNotPresent
              livenessProbe:
                initialDelaySeconds: 2
                httpGet:
                  path: /health/live
                  port: 9010
              readinessProbe:
                initialDelaySeconds: 2
                httpGet:
                  path: /health/ready
                  port: 9010
              command:
                - /trust
              args:
                - v11y
                - api
                - -p
                - '8080'
                - --index-mode
                - file
                - --auth-configuration
                - /etc/config/auth.yaml
              env:
                - name: NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: RUST_LOG
                  value: info
                - name: INFRASTRUCTURE_ENABLED
                  value: 'true'
                - name: INFRASTRUCTURE_BIND
                  value: '[::]:9010'
                - name: HTTP_SERVER_BIND_ADDR
                  value: '::'
                - name: OIDC_PROVIDER_CLIENT_ID
                  value: walker
                - name: OIDC_PROVIDER_CLIENT_SECRET
                  value: 5460cc91-4e20-4edd-881c-b15b169f8a79
                - name: OIDC_PROVIDER_ISSUER_URL
                  value: http://sso$APP_DOMAIN_URL/realms/chicken
                - name: STORAGE_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      key: root-user
                      name: infrastructure-minio
                - name: STORAGE_SECRET_KEY
                  valueFrom:
                    secretKeyRef:
                      key: root-password
                      name: infrastructure-minio
                - name: STORAGE_ENDPOINT
                  value: http://infrastructure-minio:9000
                - name: STORAGE_REGION
                  value: eu-west-1
                - name: STORAGE_BUCKET
                  value: v11y-default
                - name: INDEX_SYNC_INTERVAL
                  value: 1m
              ports:
                - containerPort: 9010
                  protocol: TCP
                  name: infra
                - containerPort: 8080
                  name: endpoint
                  protocol: TCP
              volumeMounts:
                - name: config-auth
                  mountPath: /etc/config/auth.yaml
                  subPath: auth.yaml
          volumes:
            - name: config-auth
              configMap:
                name: v11y-api-auth
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: v11y-indexer
      labels:
        app.kubernetes.io/name: v11y-indexer
        app.kubernetes.io/component: v11y
        app.kubernetes.io/instance: redhat-trusted-profile-analyzer
        app.kubernetes.io/version: 1.2.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: trusted-profile-analyzer
      annotations: null
    spec:
      replicas: 1
      strategy:
        type: Recreate
      selector:
        matchLabels:
          app.kubernetes.io/name: v11y-indexer
          app.kubernetes.io/component: v11y
          app.kubernetes.io/instance: redhat-trusted-profile-analyzer
      template:
        metadata:
          labels:
            app.kubernetes.io/name: v11y-indexer
            app.kubernetes.io/component: v11y
            app.kubernetes.io/instance: redhat-trusted-profile-analyzer
        spec:
          volumes:
            - name: data
              emptyDir: {}
          containers:
            - name: service
              image: registry.redhat.io/rhtpa/rhtpa-trustification-service-rhel9@sha256:e8c6b0b1d42cf780a827a91ecf4ac04f8b95c973062073c2a31ae1d38c59bb0c
              imagePullPolicy: IfNotPresent
              livenessProbe:
                initialDelaySeconds: 2
                httpGet:
                  path: /health/live
                  port: 9010
              readinessProbe:
                initialDelaySeconds: 2
                httpGet:
                  path: /health/ready
                  port: 9010
              command:
                - /trust
              args:
                - v11y
                - indexer
                - --stored-topic
                - v11y-stored-default
                - --indexed-topic
                - v11y-indexed-default
                - --failed-topic
                - v11y-failed-default
                - --index-mode
                - file
                - --index-dir
                - /data/index
              env:
                - name: RUST_LOG
                  value: info
                - name: INFRASTRUCTURE_ENABLED
                  value: 'true'
                - name: INFRASTRUCTURE_BIND
                  value: '[::]:9010'
                - name: STORAGE_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      key: root-user
                      name: infrastructure-minio
                - name: STORAGE_SECRET_KEY
                  valueFrom:
                    secretKeyRef:
                      key: root-password
                      name: infrastructure-minio
                - name: STORAGE_ENDPOINT
                  value: http://infrastructure-minio:9000
                - name: STORAGE_REGION
                  value: eu-west-1
                - name: STORAGE_BUCKET
                  value: v11y-default
                - name: EVENT_BUS
                  value: kafka
                - name: KAFKA_BOOTSTRAP_SERVERS
                  value: my-cluster-kafka-bootstrap:9092
                - name: KAFKA_PROPERTIES_ENV_PREFIX
                  value: TCK_
                - name: TCK_SECURITY__PROTOCOL
                  value: SASL_PLAINTEXT
                - name: TCK_SASL__USERNAME
                  value: user1
                - name: TCK_SASL__PASSWORD
                  valueFrom:
                    secretKeyRef:
                      key: password
                      name: user1
                - name: TCK_SASL__MECHANISM
                  value: SCRAM-SHA-512
                - name: INDEX_WRITER_MEMORY_BYTES
                  value: 128MiB
                - name: INDEX_SYNC_INTERVAL
                  value: 1m
              volumeMounts:
                - name: data
                  mountPath: /data
              ports:
                - containerPort: 9010
                  protocol: TCP
                  name: infra
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: vexination-api
      labels:
        app.kubernetes.io/name: vexination-api
        app.kubernetes.io/component: vexination
        app.kubernetes.io/instance: redhat-trusted-profile-analyzer
        app.kubernetes.io/version: 1.2.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: trusted-profile-analyzer
      annotations: null
    spec:
      replicas: 1
      selector:
        matchLabels:
          app.kubernetes.io/name: vexination-api
          app.kubernetes.io/component: vexination
          app.kubernetes.io/instance: redhat-trusted-profile-analyzer
      template:
        metadata:
          labels:
            app.kubernetes.io/name: vexination-api
            app.kubernetes.io/component: vexination
            app.kubernetes.io/instance: redhat-trusted-profile-analyzer
          annotations:
            configHash/auth: 772648c41c99afac20631c8f827cde6f9d9e3a7b828c8b754fba03c3fbdd1391
        spec:
          containers:
            - name: service
              image: registry.redhat.io/rhtpa/rhtpa-trustification-service-rhel9@sha256:e8c6b0b1d42cf780a827a91ecf4ac04f8b95c973062073c2a31ae1d38c59bb0c
              imagePullPolicy: IfNotPresent
              command:
                - /trust
              args:
                - vexination
                - api
                - -p
                - '8080'
                - --index-mode
                - file
                - --auth-configuration
                - /etc/config/auth.yaml
              env:
                - name: NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: RUST_LOG
                  value: info
                - name: INFRASTRUCTURE_ENABLED
                  value: 'true'
                - name: INFRASTRUCTURE_BIND
                  value: '[::]:9010'
                - name: HTTP_SERVER_BIND_ADDR
                  value: '::'
                - name: OIDC_PROVIDER_CLIENT_ID
                  value: walker
                - name: OIDC_PROVIDER_CLIENT_SECRET
                  value: 5460cc91-4e20-4edd-881c-b15b169f8a79
                - name: OIDC_PROVIDER_ISSUER_URL
                  value: http://sso$APP_DOMAIN_URL/realms/chicken
                - name: STORAGE_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      key: root-user
                      name: infrastructure-minio
                - name: STORAGE_SECRET_KEY
                  valueFrom:
                    secretKeyRef:
                      key: root-password
                      name: infrastructure-minio
                - name: STORAGE_ENDPOINT
                  value: http://infrastructure-minio:9000
                - name: STORAGE_REGION
                  value: eu-west-1
                - name: STORAGE_BUCKET
                  value: vexination-default
                - name: SWAGGER_UI_OIDC_ISSUER_URL
                  value: http://sso$APP_DOMAIN_URL/realms/chicken
                - name: INDEX_SYNC_INTERVAL
                  value: 1m
              ports:
                - containerPort: 9010
                  protocol: TCP
                  name: infra
                - containerPort: 8080
                  name: endpoint
                  protocol: TCP
              livenessProbe:
                initialDelaySeconds: 2
                httpGet:
                  path: /health/live
                  port: 9010
              readinessProbe:
                initialDelaySeconds: 2
                httpGet:
                  path: /health/ready
                  port: 9010
              volumeMounts:
                - name: config-auth
                  mountPath: /etc/config/auth.yaml
                  subPath: auth.yaml
          volumes:
            - name: config-auth
              configMap:
                name: vexination-api-auth
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: vexination-indexer
      labels:
        app.kubernetes.io/name: vexination-indexer
        app.kubernetes.io/component: vexination
        app.kubernetes.io/instance: redhat-trusted-profile-analyzer
        app.kubernetes.io/version: 1.2.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: trusted-profile-analyzer
      annotations: null
    spec:
      replicas: 1
      strategy:
        type: Recreate
      selector:
        matchLabels:
          app.kubernetes.io/name: vexination-indexer
          app.kubernetes.io/component: vexination
          app.kubernetes.io/instance: redhat-trusted-profile-analyzer
      template:
        metadata:
          labels:
            app.kubernetes.io/name: vexination-indexer
            app.kubernetes.io/component: vexination
            app.kubernetes.io/instance: redhat-trusted-profile-analyzer
        spec:
          volumes:
            - name: data
              emptyDir: {}
          containers:
            - name: service
              image: registry.redhat.io/rhtpa/rhtpa-trustification-service-rhel9@sha256:e8c6b0b1d42cf780a827a91ecf4ac04f8b95c973062073c2a31ae1d38c59bb0c
              imagePullPolicy: IfNotPresent
              command:
                - /trust
              args:
                - vexination
                - indexer
                - --stored-topic
                - vexination-stored-default
                - --indexed-topic
                - vexination-indexed-default
                - --failed-topic
                - vexination-failed-default
                - --index-mode
                - file
                - --index-dir
                - /data/index
              env:
                - name: RUST_LOG
                  value: info
                - name: INFRASTRUCTURE_ENABLED
                  value: 'true'
                - name: INFRASTRUCTURE_BIND
                  value: '[::]:9010'
                - name: STORAGE_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      key: root-user
                      name: infrastructure-minio
                - name: STORAGE_SECRET_KEY
                  valueFrom:
                    secretKeyRef:
                      key: root-password
                      name: infrastructure-minio
                - name: STORAGE_ENDPOINT
                  value: http://infrastructure-minio:9000
                - name: STORAGE_REGION
                  value: eu-west-1
                - name: STORAGE_BUCKET
                  value: vexination-default
                - name: EVENT_BUS
                  value: kafka
                - name: KAFKA_BOOTSTRAP_SERVERS
                  value: my-cluster-kafka-bootstrap:9092
                - name: KAFKA_PROPERTIES_ENV_PREFIX
                  value: TCK_
                - name: TCK_SECURITY__PROTOCOL
                  value: SASL_PLAINTEXT
                - name: TCK_SASL__USERNAME
                  value: user1
                - name: TCK_SASL__PASSWORD
                  valueFrom:
                    secretKeyRef:
                      key: password
                      name: user1
                - name: TCK_SASL__MECHANISM
                  value: SCRAM-SHA-512
                - name: INDEX_WRITER_MEMORY_BYTES
                  value: 128MiB
                - name: INDEX_SYNC_INTERVAL
                  value: 1m
              volumeMounts:
                - name: data
                  mountPath: /data
              ports:
                - containerPort: 9010
                  protocol: TCP
                  name: infra
              livenessProbe:
                initialDelaySeconds: 2
                httpGet:
                  path: /health/live
                  port: 9010
              readinessProbe:
                initialDelaySeconds: 2
                httpGet:
                  path: /health/ready
                  port: 9010
  - apiVersion: batch/v1
    kind: CronJob
    metadata:
      name: v11y-walker
      labels:
        app.kubernetes.io/name: v11y-walker
        app.kubernetes.io/component: v11y
        app.kubernetes.io/instance: redhat-trusted-profile-analyzer
        app.kubernetes.io/version: 1.2.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: trusted-profile-analyzer
    spec:
      schedule: 0 1 * * *
      suspend: false
      concurrencyPolicy: Forbid
      jobTemplate:
        spec:
          template:
            metadata:
              labels:
                app.kubernetes.io/name: v11y-walker
                app.kubernetes.io/component: v11y
                app.kubernetes.io/instance: redhat-trusted-profile-analyzer
            spec:
              restartPolicy: Never
              volumes:
                - name: cvelist
                  persistentVolumeClaim:
                    claimName: v11y-walker
              initContainers:
                - name: git-fetch
                  image: registry.redhat.io/rhtpa/rhtpa-trustification-service-rhel9@sha256:e8c6b0b1d42cf780a827a91ecf4ac04f8b95c973062073c2a31ae1d38c59bb0c
                  imagePullPolicy: IfNotPresent
                  volumeMounts:
                    - mountPath: /git
                      name: cvelist
                  command:
                    - /bin/sh
                  workingDir: /git
                  args:
                    - -ec
                    - "if test -d cvelistV5; then\n  cd cvelistV5\n  git pull\nelse\n\
                      \  git clone https://github.com/CVEProject/cvelistV5\nfi\n"
              containers:
                - name: walker
                  image: registry.redhat.io/rhtpa/rhtpa-trustification-service-rhel9@sha256:e8c6b0b1d42cf780a827a91ecf4ac04f8b95c973062073c2a31ae1d38c59bb0c
                  imagePullPolicy: IfNotPresent
                  livenessProbe:
                    initialDelaySeconds: 2
                    httpGet:
                      path: /health/live
                      port: 9010
                  readinessProbe:
                    initialDelaySeconds: 2
                    httpGet:
                      path: /health/ready
                      port: 9010
                  volumeMounts:
                    - mountPath: /mnt
                      name: cvelist
                  command:
                    - /trust
                  args:
                    - v11y
                    - walker
                    - --source
                    - /mnt/cvelistV5
                    - --delta-file
                    - /mnt/last-delta
                  env:
                    - name: RUST_LOG
                      value: info
                    - name: INFRASTRUCTURE_ENABLED
                      value: 'true'
                    - name: INFRASTRUCTURE_BIND
                      value: '[::]:9010'
                    - name: STORAGE_ACCESS_KEY
                      valueFrom:
                        secretKeyRef:
                          key: root-user
                          name: infrastructure-minio
                    - name: STORAGE_SECRET_KEY
                      valueFrom:
                        secretKeyRef:
                          key: root-password
                          name: infrastructure-minio
                    - name: STORAGE_ENDPOINT
                      value: http://infrastructure-minio:9000
                    - name: STORAGE_REGION
                      value: eu-west-1
                    - name: STORAGE_BUCKET
                      value: v11y-default
                  ports:
                    - containerPort: 9010
                      protocol: TCP
                      name: infra
  - apiVersion: networking.k8s.io/v1
    kind: Ingress
    metadata:
      name: bombastic-api
      labels:
        app.kubernetes.io/name: bombastic-api
        app.kubernetes.io/component: bombastic
        app.kubernetes.io/instance: redhat-trusted-profile-analyzer
        app.kubernetes.io/version: 1.2.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: trusted-profile-analyzer
      annotations: null
    spec:
      ingressClassName: openshift-default
      rules:
        - host: sbom$APP_DOMAIN_URL
          http:
            paths:
              - pathType: Prefix
                path: /
                backend:
                  service:
                    name: bombastic-api
                    port:
                      name: endpoint
  - apiVersion: networking.k8s.io/v1
    kind: Ingress
    metadata:
      name: spog-api
      labels:
        app.kubernetes.io/name: spog-api
        app.kubernetes.io/component: spog
        app.kubernetes.io/instance: redhat-trusted-profile-analyzer
        app.kubernetes.io/version: 1.2.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: trusted-profile-analyzer
      annotations:
        haproxy.router.openshift.io/timeout: 180s
    spec:
      ingressClassName: openshift-default
      rules:
        - host: api$APP_DOMAIN_URL
          http:
            paths:
              - pathType: Prefix
                path: /
                backend:
                  service:
                    name: spog-api
                    port:
                      name: endpoint
  - apiVersion: networking.k8s.io/v1
    kind: Ingress
    metadata:
      name: spog-ui
      labels:
        app.kubernetes.io/name: spog-ui
        app.kubernetes.io/component: spog
        app.kubernetes.io/instance: redhat-trusted-profile-analyzer
        app.kubernetes.io/version: 1.2.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: trusted-profile-analyzer
      annotations:
        haproxy.router.openshift.io/timeout: 180s
    spec:
      ingressClassName: openshift-default
      rules:
        - host: console$APP_DOMAIN_URL
          http:
            paths:
              - pathType: Prefix
                path: /
                backend:
                  service:
                    name: spog-ui
                    port:
                      name: endpoint
  - apiVersion: networking.k8s.io/v1
    kind: Ingress
    metadata:
      name: vexination-api
      labels:
        app.kubernetes.io/name: vexination-api
        app.kubernetes.io/component: vexination
        app.kubernetes.io/instance: redhat-trusted-profile-analyzer
        app.kubernetes.io/version: 1.2.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: trusted-profile-analyzer
      annotations: null
    spec:
      ingressClassName: openshift-default
      rules:
        - host: vex$APP_DOMAIN_URL
          http:
            paths:
              - pathType: Prefix
                path: /
                backend:
                  service:
                    name: vexination-api
                    port:
                      name: endpoint
    NOTES: null
    OpenShift:
      Detected: false
      Use Service CA: false
