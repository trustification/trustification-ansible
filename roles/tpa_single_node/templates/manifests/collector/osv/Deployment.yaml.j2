apiVersion: apps/v1
kind: Deployment
metadata:
  name: collector-osv
  namespace: "{{ tpa_single_node_namespace }}"
  labels:
    app.kubernetes.io/name: collector-osv
    app.kubernetes.io/component: collector
    app.kubernetes.io/instance: redhat-trusted-profile-analyzer
    app.kubernetes.io/version: 1.1.1
    app.kubernetes.io/part-of: trusted-profile-analyzer
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: collector-osv
      app.kubernetes.io/component: collector
      app.kubernetes.io/instance: redhat-trusted-profile-analyzer
  template:
    metadata:
      labels:
        app.kubernetes.io/name: collector-osv
        app.kubernetes.io/component: collector
        app.kubernetes.io/instance: redhat-trusted-profile-analyzer
      annotations:
        configHash/auth: "{{ oidc_configmap_checksum.stat.checksum }}"
    spec:
      volumes:
        - name: guac-config
          configMap:
            name: collectorist-api
        - name: tls
          secret:
            secretName: collector-osv-tls
        - name: config-auth
          configMap:
            name: collector-osv-auth
        - name: collector-oidc-secret
          secret:
            secretName: oidc_secret
      containers:
        - name: service
          image: "{{ tpa_single_node_trustification_image }}"
          imagePullPolicy: IfNotPresent
          command: ["/trust"]
          args:
            - collector
            - osv
            - -p
            - "8080"
            - --auth-configuration
            - /etc/config/auth.yaml
            - --v11y-url
            - http://v11y-api-pod:{{ tpa_single_node_v11y_api_port }}
            - --guac-url
            - http://guac-graphql-pod:8080/query
          env:
# TODO
#            - name: NAMESPACE
#              valueFrom:
#                fieldRef:
#                  fieldPath: metadata.namespace
            - name: RUST_LOG
              value: info
            - name: INFRASTRUCTURE_ENABLED
              value: "true"
            - name: INFRASTRUCTURE_BIND
              value: "[::]:9010"
            - name: HTTP_SERVER_BIND_ADDR
              value: "::"
            - name: HTTP_SERVER_TLS_ENABLED
              value: "true"
            - name: HTTP_SERVER_TLS_KEY_FILE
              value: /etc/tls/tls.key
            - name: HTTP_SERVER_TLS_CERTIFICATE_FILE
              value: /etc/tls/tls.crt
            - name: OIDC_PROVIDER_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  key: client_id
                  name: oidc_secret
            - name: OIDC_PROVIDER_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  key: client_secret
                  name: oidc_secret
            - name: OIDC_PROVIDER_ISSUER_URL
              value: "{{ tpa_single_node_oidc_issuer_url }}"
{% if client_tls_ca.stat.path is defined and client_tls_ca.stat.path | trim | length > 0 %}
            - name: CLIENT_TLS_CA_CERTIFICATES
              value: "{{ client_tls_ca.stat.path }}"
{% endif %}
          ports:
            - containerPort: 9010
              protocol: TCP
              name: infra
            - containerPort: 8080
              name: endpoint
              protocol: TCP
          volumeMounts:
            - name: guac-config
              mountPath: /guac
              readOnly: true
            - mountPath: /etc/tls
              name: tls
              readOnly: true
            - mountPath: /etc/colloidcsecret
              name: collector-oidc-secret
            - name: config-auth
              mountPath: /etc/config/auth.yaml
              subPath: auth.yaml
          livenessProbe:
            initialDelaySeconds: 2
            httpGet:
              path: /health/live
              port: 9010
          readinessProbe:
            initialDelaySeconds: 2
            httpGet:
              path: /health/ready
              port: 9010
