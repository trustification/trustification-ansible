apiVersion: apps/v1
kind: Deployment
metadata:
  name: vexination-api
  namespace: "{{ tpa_single_node_namespace }}"
  labels:
    app.kubernetes.io/name: vexination-api
    app.kubernetes.io/component: vexination
    app.kubernetes.io/instance: redhat-trusted-profile-analyzer
    app.kubernetes.io/version: 1.1.1
    app.kubernetes.io/part-of: trusted-profile-analyzer
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: vexination-api
      app.kubernetes.io/component: vexination
      app.kubernetes.io/instance: redhat-trusted-profile-analyzer
  template:
    metadata:
      labels:
        app.kubernetes.io/name: vexination-api
        app.kubernetes.io/component: vexination
        app.kubernetes.io/instance: redhat-trusted-profile-analyzer
      annotations:
        config/checksum: "{{ oidc_configmap_checksum.stat.checksum }}"
    spec:
      volumes:
      - name: config-auth
        configMap:
          name: vexination-api-auth
      - name: vexinationapisecret
        secret:
          secretName: storage_secret
      containers:
        - image: "{{ tpa_single_node_trustification_image }}"
          imagePullPolicy: IfNotPresent
          name: service
          command: ["/trust"]
          args:
            - "vexination"
            - "api"
            - "-p"
            - "8080"
            - "--index-mode"
            - "file"
            - "--auth-configuration"
            - "/etc/config/auth.yaml"      
          ports: 
            - containerPort: 9010
              protocol: TCP
              name: infra
            - containerPort: 8080
              name: endpoint
              protocol: TCP
          volumeMounts:
          - name: config-auth
            mountPath: /etc/config/auth.yaml
            subPath: auth.yaml
          - mountPath: /etc/vexinationapisecret
            name: vexinationapisecret
          livenessProbe:
            initialDelaySeconds: 2
            httpGet:
              path: /health/live
              port: 9010
          readinessProbe:
            initialDelaySeconds: 2
            httpGet:
              path: /health/ready
              port: 9010
          env:
            - name: RUST_LOG
              value: "info"    
            - name: INFRASTRUCTURE_ENABLED
              value: "true"
            - name: INFRASTRUCTURE_BIND
              value: "[::]:9010"
            - name: HTTP_SERVER_BIND_ADDR
              value: "::"

            - name: INDEX_SYNC_INTERVAL
              value: 1m
            - name: OIDC_PROVIDER_ISSUER_URL
              value: "{{ tpa_single_node_oidc_issuer_url }}"
            - name: OIDC_PROVIDER_CLIENT_ID
              value: "{{ tpa_single_node_oidc_provider_client_id }}"
            - name: OIDC_PROVIDER_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  key: client_secret
                  name: storage_secret

{% if 'minio' in tpa_single_node_storage_type %}
            - name: STORAGE_ENDPOINT
              value: "{{ tpa_single_node_storage_endpoint }}"
{% endif %}
            - name: STORAGE_REGION
              value: "{{ tpa_single_node_storage_region }}"
            - name: STORAGE_BUCKET
              value: "{{ tpa_single_node_storage_vexination_bucket }}"
            - name: STORAGE_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  key: storage_access_key
                  name: storage_secret
            - name: STORAGE_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  key: storage_secret_key
                  name: storage_secret
            - name: SWAGGER_UI_OIDC_ISSUER_URL
              value: "{{ tpa_single_node_oidc_issuer_url }}"
